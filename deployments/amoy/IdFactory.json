{
  "address": "0xb5Cf841dB25F988fd73ff529FEA0b14c9232b115",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementationAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isHomeChain",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ReceiverAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "chainSelector",
          "type": "uint64"
        }
      ],
      "name": "ReceiverRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "TokenFactoryAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "TokenFactoryRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "TokenLinked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "WalletLinked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "WalletUnlinked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_isHomeChain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_chainSelector",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "addReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "addTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "createIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        },
        {
          "internalType": "bytes32[]",
          "name": "_managementKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "createIdentityWithManagementKeys",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "createTokenIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destinationChainSelectorToReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainSelectors",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "getIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_chainSelector",
          "type": "uint64"
        }
      ],
      "name": "getReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReceivers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "getWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationAuthority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "isSaltTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "isTokenFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newWallet",
          "type": "address"
        }
      ],
      "name": "linkWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_chainSelector",
          "type": "uint64"
        }
      ],
      "name": "removeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "removeTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "setBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldWallet",
          "type": "address"
        }
      ],
      "name": "unlinkWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x44e0f622ab8d5b2f71d5423c965db78a84c0aa375977e7340bdacc42a3eec30f",
  "receipt": {
    "to": null,
    "from": "0x30E4422c4276920a32E0fcA2B547Afd6d40cA0C8",
    "contractAddress": "0xb5Cf841dB25F988fd73ff529FEA0b14c9232b115",
    "transactionIndex": 0,
    "gasUsed": "2508474",
    "logsBloom": "0x
    "blockHash": "0xf8df74fe9c76266d83f62eb642e971a6e72f029a2cc8c411a5c1bf747c3e17f9",
    "transactionHash": "0x44e0f622ab8d5b2f71d5423c965db78a84c0aa375977e7340bdacc42a3eec30f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10619887,
        "transactionHash": "0x44e0f622ab8d5b2f71d5423c965db78a84c0aa375977e7340bdacc42a3eec30f",
        "address": "0xb5Cf841dB25F988fd73ff529FEA0b14c9232b115",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000030e4422c4276920a32e0fca2b547afd6d40ca0c8"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf8df74fe9c76266d83f62eb642e971a6e72f029a2cc8c411a5c1bf747c3e17f9"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 10619887,
        "transactionHash": "0x44e0f622ab8d5b2f71d5423c965db78a84c0aa375977e7340bdacc42a3eec30f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000030e4422c4276920a32e0fca2b547afd6d40ca0c8",
          "0x0000000000000000000000004ad84f7014b7b44f723f284a85b1662337971439"
        ],
        "data": "0x000000000000000000000000000000000000000000000000011444c21667971a00000000000000000000000000000000000000000000000002a7f182bcac8200000000000000000000000000000000000000000000000213cf96b4763ed19ecb0000000000000000000000000000000000000000000000000193acc0a644eae6000000000000000000000000000000000000000000000213d0aaf938553935e5",
        "logIndex": 1,
        "blockHash": "0xf8df74fe9c76266d83f62eb642e971a6e72f029a2cc8c411a5c1bf747c3e17f9"
      }
    ],
    "blockNumber": 10619887,
    "cumulativeGasUsed": "2508474",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC0b7923a4FB59789B1dCB4a1E02Fee1720f6c61B",
    true
  ],
  "numDeployments": 2,
  "solcInputHash": "952305c3f04167b0bf19ed522822f437",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isHomeChain\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ReceiverAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"ReceiverRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"TokenLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletUnlinked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_isHomeChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"addReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"addTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_managementKeys\",\"type\":\"bytes32[]\"}],\"name\":\"createIdentityWithManagementKeys\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createTokenIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destinationChainSelectorToReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainSelectors\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_chainSelector\",\"type\":\"uint64\"}],\"name\":\"getReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReceivers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"isSaltTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"isTokenFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"linkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_chainSelector\",\"type\":\"uint64\"}],\"name\":\"removeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"removeTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldWallet\",\"type\":\"address\"}],\"name\":\"unlinkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addReceiver(uint64,address)\":{\"details\":\"See {IdFactory-addReceiver}.\"},\"addTokenFactory(address)\":{\"details\":\"See {IdFactory-addTokenFactory}.\"},\"createIdentity(address,string)\":{\"details\":\"See {IdFactory-createIdentity}.\"},\"createIdentityWithManagementKeys(address,string,bytes32[])\":{\"details\":\"See {IdFactory-createIdentityWithManagementKeys}.\"},\"createTokenIdentity(address,address,string)\":{\"details\":\"See {IdFactory-createTokenIdentity}.\"},\"getBridge()\":{\"details\":\"get bridge address\"},\"getChainSelectors()\":{\"details\":\"See {IdFactory-getChainSelectors}.\"},\"getIdentity(address)\":{\"details\":\"See {IdFactory-getIdentity}.\"},\"getReceiver(uint64)\":{\"details\":\"See {IdFactory-getReceiver}.\"},\"getReceivers()\":{\"details\":\"See {IdFactory-getReceivers}.\"},\"getToken(address)\":{\"details\":\"See {IdFactory-getToken}.\"},\"getWallets(address)\":{\"details\":\"See {IdFactory-getWallets}.\"},\"implementationAuthority()\":{\"details\":\"See {IdFactory-implementationAuthority}.\"},\"isSaltTaken(string)\":{\"details\":\"See {IdFactory-isSaltTaken}.\"},\"isTokenFactory(address)\":{\"details\":\"See {IdFactory-isTokenFactory}.\"},\"linkWallet(address)\":{\"details\":\"See {IdFactory-linkWallet}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeReceiver(uint64)\":{\"details\":\"See {IdFactory-removeReceiver}.\"},\"removeTokenFactory(address)\":{\"details\":\"See {IdFactory-removeTokenFactory}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBridge(address)\":{\"params\":{\"_bridge\":\"the address of the bridge contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlinkWallet(address)\":{\"details\":\"See {IdFactory-unlinkWallet}.\"}},\"stateVariables\":{\"bridge\":{\"details\":\"getter for the bridge contract address\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deployed(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/factory/IdFactory.sol\":\"IdFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/factory/IIdFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\ninterface IIdFactory {\\n\\t/// events\\n\\n\\t// event emitted whenever a single contract is deployed by the factory\\n\\tevent Deployed(address indexed _addr);\\n\\n\\t// event emitted when a wallet is linked to an ONCHAINID contract\\n\\tevent WalletLinked(address indexed wallet, address indexed identity);\\n\\n\\t// event emitted when a token is linked to an ONCHAINID contract\\n\\tevent TokenLinked(address indexed token, address indexed identity);\\n\\n\\t// event emitted when a wallet is unlinked from an ONCHAINID contract\\n\\tevent WalletUnlinked(address indexed wallet, address indexed identity);\\n\\n\\t// event emitted when an address is registered on the factory as a Token\\n\\t// factory address, granting this address the privilege to issue\\n\\t// Onchain identities for tokens\\n\\tevent TokenFactoryAdded(address indexed factory);\\n\\n\\t// event emitted when a previously recorded token factory address is removed\\n\\tevent TokenFactoryRemoved(address indexed factory);\\n\\n\\t// event emitted when a receiver is added for a chainSelector\\n\\tevent ReceiverAdded(uint64 chainSelector, address receiver);\\n\\n\\t// event emitted when a receiver is removed for a chainSelector\\n\\tevent ReceiverRemoved(uint64 chainSelector);\\n\\n\\t/// functions\\n\\n\\t/**\\n\\t *  @dev function used to create a new Identity proxy from the factory\\n\\t *  @param _wallet the wallet address of the primary owner of this ONCHAINID contract\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  requires a new salt for each deployment\\n\\t *  _wallet cannot be linked to another ONCHAINID\\n\\t *  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility\\n\\t *  of the function, including calls to oracles for multichain\\n\\t *  deployment security (avoid identity theft), defining payment requirements, etc.\\n\\t */\\n\\tfunction createIdentity(address _wallet, string memory _salt) external returns (address);\\n\\n\\t/**\\n\\t *  @dev function used to create a new Identity proxy from the factory, setting the wallet and listed keys as\\n\\t * MANAGEMENT keys.\\n\\t *  @param _wallet the wallet address of the primary owner of this ONCHAINID contract\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  @param _managementKeys A list of keys hash (keccak256(abiEncoded())) to add as MANAGEMENT keys.\\n\\t *  requires a new salt for each deployment\\n\\t *  _wallet cannot be linked to another ONCHAINID\\n\\t *  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility\\n\\t *  of the function, including calls to oracles for multichain\\n\\t *  deployment security (avoid identity theft), defining payment requirements, etc.\\n\\t */\\n\\tfunction createIdentityWithManagementKeys(\\n\\t\\taddress _wallet,\\n\\t\\tstring memory _salt,\\n\\t\\tbytes32[] memory _managementKeys\\n\\t) external returns (address);\\n\\n\\t/**\\n\\t *  @dev function used to create a new Token Identity proxy from the factory\\n\\t *  @param _token the address of the token contract\\n\\t *  @param _tokenOwner the owner address of the token\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  requires a new salt for each deployment\\n\\t *  _token cannot be linked to another ONCHAINID\\n\\t *  only Token factory or owner can call (owner should only use its privilege\\n\\t *  for tokens not issued by a Token factory onchain\\n\\t */\\n\\tfunction createTokenIdentity(address _token, address _tokenOwner, string memory _salt) external returns (address);\\n\\n\\t/**\\n\\t * @dev function used to update bridge contract address\\n\\t * @param _bridge the address of the bridge contract\\n\\t * can be called only by Owner\\n\\t */\\n\\n\\tfunction setBridge(address _bridge) external;\\n\\n\\t/**\\n\\t *  @dev function used to link a new wallet to an existing identity\\n\\t *  @param _newWallet the address of the wallet to link\\n\\t *  requires msg.sender to be linked to an existing onchainid\\n\\t *  the _newWallet will be linked to the same OID contract as msg.sender\\n\\t *  _newWallet cannot be linked to an OID yet\\n\\t *  _newWallet cannot be address 0\\n\\t *  cannot link more than 100 wallets to an OID, for gas consumption reason\\n\\t */\\n\\tfunction linkWallet(address _newWallet) external;\\n\\n\\t/**\\n\\t *  @dev function used to unlink a wallet from an existing identity\\n\\t *  @param _oldWallet the address of the wallet to unlink\\n\\t *  requires msg.sender to be linked to the same onchainid as _oldWallet\\n\\t *  msg.sender cannot be _oldWallet to keep at least 1 wallet linked to any OID\\n\\t *  _oldWallet cannot be address 0\\n\\t */\\n\\tfunction unlinkWallet(address _oldWallet) external;\\n\\n\\t/**\\n\\t *  @dev function used to register an address as a token factory\\n\\t *  @param _factory the address of the token factory\\n\\t *  can be called only by Owner\\n\\t *  _factory cannot be registered yet\\n\\t *  once the factory has been registered it can deploy token identities\\n\\t */\\n\\tfunction addTokenFactory(address _factory) external;\\n\\n\\t/**\\n\\t *  @dev function used to unregister an address previously registered as a token factory\\n\\t *  @param _factory the address of the token factory\\n\\t *  can be called only by Owner\\n\\t *  _factory has to be registered previously\\n\\t *  once the factory has been unregistered it cannot deploy token identities anymore\\n\\t */\\n\\tfunction removeTokenFactory(address _factory) external;\\n\\n\\t/**\\n\\t *  @dev function used to add a receiver for a chainSelector\\n\\t *  @param _chainSelector the chainSelector for which the receiver is added\\n\\t *  @param _receiver the address of the receiver\\n\\t *  can be called only by Owner\\n\\t *  _receiver cannot be registered yet\\n\\t *  once the receiver has been registered it can receive messages from the chainSelector\\n\\t */\\n\\tfunction addReceiver(uint64 _chainSelector, address _receiver) external;\\n\\n\\t/**\\n\\t *  @dev function used to remove a receiver for a chainSelector\\n\\t *  @param _chainSelector the chainSelector for which the receiver is removed\\n\\t *  can be called only by Owner\\n\\t *  _receiver has to be registered previously\\n\\t *  once the receiver has been removed it cannot receive messages from the chainSelector anymore\\n\\t */\\n\\tfunction removeReceiver(uint64 _chainSelector) external;\\n\\n\\t/**\\n\\t *  @dev getter for OID contract corresponding to a wallet/token\\n\\t *  @param _wallet the wallet/token address\\n\\t */\\n\\tfunction getIdentity(address _wallet) external view returns (address);\\n\\n\\t/**\\n\\t *  @dev getter to fetch the array of wallets linked to an OID contract\\n\\t *  @param _identity the address of the OID contract\\n\\t *  returns an array of addresses linked to the OID\\n\\t */\\n\\tfunction getWallets(address _identity) external view returns (address[] memory);\\n\\n\\t/**\\n\\t *  @dev getter to fetch the token address linked to an OID contract\\n\\t *  @param _identity the address of the OID contract\\n\\t *  returns the address linked to the OID\\n\\t */\\n\\tfunction getToken(address _identity) external view returns (address);\\n\\n\\t/**\\n\\t *  @dev getter to know if an address is registered as token factory or not\\n\\t *  @param _factory the address of the factory\\n\\t *  returns true if the address corresponds to a registered factory\\n\\t */\\n\\tfunction isTokenFactory(address _factory) external view returns (bool);\\n\\n\\t/**\\n\\t *  @dev getter to know if a salt is taken for the create2 deployment\\n\\t *  @param _salt the salt used for deployment\\n\\t */\\n\\tfunction isSaltTaken(string calldata _salt) external view returns (bool);\\n\\n\\t/**\\n\\t * @dev getter for the implementation authority used by this factory.\\n\\t */\\n\\tfunction implementationAuthority() external view returns (address);\\n\\n\\t/**\\n\\t * @dev getter for the receiver of a chainSelector\\n\\t * @param _chainSelector the chainSelector for which the receiver is fetched\\n\\t */\\n\\tfunction getReceiver(uint64 _chainSelector) external view returns (address);\\n\\n\\t/**\\n\\t * @dev getter for the list of chainSelectors\\n\\t */\\n\\tfunction getChainSelectors() external view returns (uint64[] memory);\\n\\n\\t/**\\n\\t * @dev getter for the list of receivers\\n\\t */\\n\\tfunction getReceivers() external view returns (address[] memory);\\n\\n\\t/**\\n\\t * @dev getter for the bridge contract address\\n\\t */\\n\\tfunction bridge() external view returns (address);\\n}\\n\",\"keccak256\":\"0x2b7f3e322454928714f864bf480cbff75c5c0f2a4bad97e57f429e16f0021527\",\"license\":\"GPL-3.0\"},\"src/factory/IdFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\nimport \\\"../proxy/IdentityProxy.sol\\\";\\nimport \\\"./IIdFactory.sol\\\";\\nimport \\\"../interface/IERC734.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract IdFactory is IIdFactory, Ownable {\\n\\tmapping(address => bool) private _tokenFactories;\\n\\n\\t// address of the _implementationAuthority contract making the link to the implementation contract\\n\\taddress private immutable _implementationAuthority;\\n\\n\\t// as it is not possible to deploy 2 times the same contract address, this mapping allows us to check which\\n\\t// salt is taken and which is not\\n\\tmapping(string => bool) private _saltTaken;\\n\\n\\t// ONCHAINID of the wallet owner\\n\\tmapping(address => address) private _userIdentity;\\n\\n\\t// wallets currently linked to an ONCHAINID\\n\\tmapping(address => address[]) private _wallets;\\n\\n\\t// ONCHAINID of the token\\n\\tmapping(address => address) private _tokenIdentity;\\n\\n\\t// token linked to an ONCHAINID\\n\\tmapping(address => address) private _tokenAddress;\\n\\n\\t// flag to check if the contract is on the home chain\\n\\tbool public _isHomeChain;\\n\\n\\t// DetinationChainSelectors and Receivers address (Receiver is the Bridge contract on the destination chain)\\n\\tmapping(uint64 => address) public destinationChainSelectorToReceiver;\\n\\tuint64[] private chainSelectors;\\n\\n\\t// CrossChainBridge address\\n\\taddress public bridge;\\n\\n\\t// setting\\n\\tconstructor(address implementationAuthority, bool isHomeChain) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_implementationAuthority = implementationAuthority;\\n\\t\\t_isHomeChain = isHomeChain;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-addTokenFactory}.\\n\\t */\\n\\tfunction addTokenFactory(address _factory) external override onlyOwner {\\n\\t\\trequire(_factory != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(!isTokenFactory(_factory), \\\"already a factory\\\");\\n\\t\\t_tokenFactories[_factory] = true;\\n\\t\\temit TokenFactoryAdded(_factory);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-removeTokenFactory}.\\n\\t */\\n\\tfunction removeTokenFactory(address _factory) external override onlyOwner {\\n\\t\\trequire(_factory != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(isTokenFactory(_factory), \\\"not a factory\\\");\\n\\t\\t_tokenFactories[_factory] = false;\\n\\t\\temit TokenFactoryRemoved(_factory);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createIdentity}.\\n\\t */\\n\\tfunction createIdentity(address _wallet, string memory _salt) external override onlyOwner returns (address) {\\n\\t\\trequire(_wallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory oidSalt = string.concat(\\\"OID\\\", _salt);\\n\\t\\trequire(!_saltTaken[oidSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_userIdentity[_wallet] == address(0), \\\"wallet already linked to an identity\\\");\\n\\t\\taddress identity = _deployIdentity(oidSalt, _implementationAuthority, _wallet);\\n\\t\\t_saltTaken[oidSalt] = true;\\n\\t\\t_userIdentity[_wallet] = identity;\\n\\t\\t_wallets[identity].push(_wallet);\\n\\t\\temit WalletLinked(_wallet, identity);\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createIdentityWithManagementKeys}.\\n\\t */\\n\\tfunction createIdentityWithManagementKeys(\\n\\t\\taddress _wallet,\\n\\t\\tstring memory _salt,\\n\\t\\tbytes32[] memory _managementKeys\\n\\t) external override onlyOwner returns (address) {\\n\\t\\trequire(_wallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory oidSalt = string.concat(\\\"OID\\\", _salt);\\n\\t\\trequire(!_saltTaken[oidSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_userIdentity[_wallet] == address(0), \\\"wallet already linked to an identity\\\");\\n\\t\\trequire(_managementKeys.length > 0, \\\"invalid argument - empty list of keys\\\");\\n\\n\\t\\taddress identity = _deployIdentity(oidSalt, _implementationAuthority, address(this));\\n\\n\\t\\tfor (uint i = 0; i < _managementKeys.length; i++) {\\n\\t\\t\\trequire(\\n\\t\\t\\t\\t_managementKeys[i] != keccak256(abi.encode(_wallet)),\\n\\t\\t\\t\\t\\\"invalid argument - wallet is also listed in management keys\\\"\\n\\t\\t\\t);\\n\\t\\t\\tIERC734(identity).addKey(_managementKeys[i], 1, 1);\\n\\t\\t}\\n\\n\\t\\tIERC734(identity).removeKey(keccak256(abi.encode(address(this))), 1);\\n\\n\\t\\t_saltTaken[oidSalt] = true;\\n\\t\\t_userIdentity[_wallet] = identity;\\n\\t\\t_wallets[identity].push(_wallet);\\n\\t\\temit WalletLinked(_wallet, identity);\\n\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createTokenIdentity}.\\n\\t */\\n\\tfunction createTokenIdentity(\\n\\t\\taddress _token,\\n\\t\\taddress _tokenOwner,\\n\\t\\tstring memory _salt\\n\\t) external override returns (address) {\\n\\t\\trequire(isTokenFactory(msg.sender) || msg.sender == owner(), \\\"only Factory or owner can call\\\");\\n\\t\\trequire(_token != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_tokenOwner != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory tokenIdSalt = string.concat(\\\"Token\\\", _salt);\\n\\t\\trequire(!_saltTaken[tokenIdSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_tokenIdentity[_token] == address(0), \\\"token already linked to an identity\\\");\\n\\t\\taddress identity = _deployIdentity(tokenIdSalt, _implementationAuthority, _tokenOwner);\\n\\t\\t_saltTaken[tokenIdSalt] = true;\\n\\t\\t_tokenIdentity[_token] = identity;\\n\\t\\t_tokenAddress[identity] = _token;\\n\\t\\temit TokenLinked(_token, identity);\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-linkWallet}.\\n\\t */\\n\\tfunction linkWallet(address _newWallet) external override {\\n\\t\\trequire(_newWallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_userIdentity[msg.sender] != address(0), \\\"wallet not linked to an identity contract\\\");\\n\\t\\trequire(_userIdentity[_newWallet] == address(0), \\\"new wallet already linked\\\");\\n\\t\\trequire(_tokenIdentity[_newWallet] == address(0), \\\"invalid argument - token address\\\");\\n\\t\\taddress identity = _userIdentity[msg.sender];\\n\\t\\trequire(_wallets[identity].length < 101, \\\"max amount of wallets per ID exceeded\\\");\\n\\t\\t_userIdentity[_newWallet] = identity;\\n\\t\\t_wallets[identity].push(_newWallet);\\n\\t\\temit WalletLinked(_newWallet, identity);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-unlinkWallet}.\\n\\t */\\n\\tfunction unlinkWallet(address _oldWallet) external override {\\n\\t\\trequire(_oldWallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_oldWallet != msg.sender, \\\"cannot be called on sender address\\\");\\n\\t\\trequire(_userIdentity[msg.sender] == _userIdentity[_oldWallet], \\\"only a linked wallet can unlink\\\");\\n\\t\\taddress _identity = _userIdentity[_oldWallet];\\n\\t\\tdelete _userIdentity[_oldWallet];\\n\\t\\tuint256 length = _wallets[_identity].length;\\n\\t\\tfor (uint256 i = 0; i < length; i++) {\\n\\t\\t\\tif (_wallets[_identity][i] == _oldWallet) {\\n\\t\\t\\t\\t_wallets[_identity][i] = _wallets[_identity][length - 1];\\n\\t\\t\\t\\t_wallets[_identity].pop();\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit WalletUnlinked(_oldWallet, _identity);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-addReceiver}.\\n\\t */\\n\\n\\tfunction addReceiver(uint64 _chainSelector, address _receiver) external override onlyOwner {\\n\\t\\trequire(_receiver != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(destinationChainSelectorToReceiver[_chainSelector] == address(0), \\\"receiver already added\\\");\\n\\t\\tdestinationChainSelectorToReceiver[_chainSelector] = _receiver;\\n\\t\\tchainSelectors.push(_chainSelector);\\n\\t\\temit ReceiverAdded(_chainSelector, _receiver);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-removeReceiver}.\\n\\t */\\n\\n\\tfunction removeReceiver(uint64 _chainSelector) external override onlyOwner {\\n\\t\\trequire(destinationChainSelectorToReceiver[_chainSelector] != address(0), \\\"receiver not added\\\");\\n\\t\\tdelete destinationChainSelectorToReceiver[_chainSelector];\\n\\t\\tuint256 length = chainSelectors.length;\\n\\t\\tfor (uint256 i = 0; i < length; i++) {\\n\\t\\t\\tif (chainSelectors[i] == _chainSelector) {\\n\\t\\t\\t\\tchainSelectors[i] = chainSelectors[length - 1];\\n\\t\\t\\t\\tchainSelectors.pop();\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit ReceiverRemoved(_chainSelector);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getChainSelectors}.\\n\\t */\\n\\n\\tfunction getChainSelectors() external view override returns (uint64[] memory) {\\n\\t\\treturn chainSelectors;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getReceiver}.\\n\\t */\\n\\n\\tfunction getReceiver(uint64 _chainSelector) external view override returns (address) {\\n\\t\\treturn destinationChainSelectorToReceiver[_chainSelector];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getReceivers}.\\n\\t */\\n\\n\\tfunction getReceivers() external view override returns (address[] memory) {\\n\\t\\taddress[] memory receivers = new address[](chainSelectors.length);\\n\\t\\tfor (uint256 i = 0; i < chainSelectors.length; i++) {\\n\\t\\t\\treceivers[i] = destinationChainSelectorToReceiver[chainSelectors[i]];\\n\\t\\t}\\n\\t\\treturn receivers;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getIdentity}.\\n\\t */\\n\\tfunction getIdentity(address _wallet) external view override returns (address) {\\n\\t\\tif (_tokenIdentity[_wallet] != address(0)) {\\n\\t\\t\\treturn _tokenIdentity[_wallet];\\n\\t\\t} else {\\n\\t\\t\\treturn _userIdentity[_wallet];\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-isSaltTaken}.\\n\\t */\\n\\tfunction isSaltTaken(string calldata _salt) external view override returns (bool) {\\n\\t\\treturn _saltTaken[_salt];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getWallets}.\\n\\t */\\n\\tfunction getWallets(address _identity) external view override returns (address[] memory) {\\n\\t\\treturn _wallets[_identity];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getToken}.\\n\\t */\\n\\tfunction getToken(address _identity) external view override returns (address) {\\n\\t\\treturn _tokenAddress[_identity];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-isTokenFactory}.\\n\\t */\\n\\tfunction isTokenFactory(address _factory) public view override returns (bool) {\\n\\t\\treturn _tokenFactories[_factory];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-implementationAuthority}.\\n\\t */\\n\\tfunction implementationAuthority() public view override returns (address) {\\n\\t\\treturn _implementationAuthority;\\n\\t}\\n\\n\\t/**\\n\\t *\\n\\t * @param _bridge the address of the bridge contract\\n\\t */\\n\\tfunction setBridge(address _bridge) external onlyOwner {\\n\\t\\trequire(_bridge != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\tbridge = _bridge;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev get bridge address\\n\\t */\\n\\tfunction getBridge() external view returns (address) {\\n\\t\\treturn bridge;\\n\\t}\\n\\n\\t// deploy function with create2 opcode call\\n\\t// returns the address of the contract created\\n\\tfunction _deploy(string memory salt, bytes memory bytecode) private returns (address) {\\n\\t\\tbytes32 saltBytes = bytes32(keccak256(abi.encodePacked(salt)));\\n\\t\\taddress addr;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tlet encoded_data := add(0x20, bytecode) // load initialization code.\\n\\t\\t\\tlet encoded_size := mload(bytecode) // load init code's length.\\n\\t\\t\\taddr := create2(0, encoded_data, encoded_size, saltBytes)\\n\\t\\t\\tif iszero(extcodesize(addr)) {\\n\\t\\t\\t\\trevert(0, 0)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit Deployed(addr);\\n\\t\\treturn addr;\\n\\t}\\n\\n\\t// function used to deploy an identity using CREATE2\\n\\tfunction _deployIdentity(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority,\\n\\t\\taddress _wallet\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(IdentityProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority, _wallet);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n}\\n\",\"keccak256\":\"0x2a32829978948ad453aced18cd2904c06a15562d18039afd55df44f54de1a918\",\"license\":\"GPL-3.0\"},\"src/interface/IERC734.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\\n */\\ninterface IERC734 {\\n\\t/**\\n\\t * @dev Emitted when an execution request was approved.\\n\\t *\\n\\t * Specification: MUST be triggered when approve was successfully called.\\n\\t */\\n\\tevent Approved(uint256 indexed executionId, bool approved);\\n\\n\\t/**\\n\\t * @dev Emitted when an execute operation was approved and successfully performed.\\n\\t *\\n\\t * Specification: MUST be triggered when approve was called and the execution was successfully approved.\\n\\t */\\n\\tevent Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when an execution request was performed via `execute`.\\n\\t *\\n\\t * Specification: MUST be triggered when execute was successfully called.\\n\\t */\\n\\tevent ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when an execute operation was called and failed\\n\\t *\\n\\t * Specification: MUST be triggered when execute call failed\\n\\t */\\n\\tevent ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when a key was added to the Identity.\\n\\t *\\n\\t * Specification: MUST be triggered when addKey was successfully called.\\n\\t */\\n\\tevent KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n\\t * @dev Emitted when a key was removed from the Identity.\\n\\t *\\n\\t * Specification: MUST be triggered when removeKey was successfully called.\\n\\t */\\n\\tevent KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n\\t * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\\n\\t *\\n\\t * Triggers Event: `KeyAdded`\\n\\t *\\n\\t * Specification: MUST only be done by keys of purpose 1, or the identity\\n\\t * itself. If it's the identity itself, the approval process will determine its approval.\\n\\t */\\n\\tfunction addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Approves an execution.\\n\\t *\\n\\t * Triggers Event: `Approved`\\n\\t * Triggers on execution successful Event: `Executed`\\n\\t * Triggers on execution failure Event: `ExecutionFailed`\\n\\t */\\n\\tfunction approve(uint256 _id, bool _approve) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Removes _purpose for _key from the identity.\\n\\t *\\n\\t * Triggers Event: `KeyRemoved`\\n\\t *\\n\\t * Specification: MUST only be done by keys of purpose 1, or the identity itself.\\n\\t * If it's the identity itself, the approval process will determine its approval.\\n\\t */\\n\\tfunction removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Passes an execution instruction to an ERC734 identity.\\n\\t * How the execution is handled is up to the identity implementation:\\n\\t * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\\n\\t * approve this execution.\\n\\t * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\\n\\t *\\n\\t * Triggers Event: ExecutionRequested\\n\\t * Triggers on direct execution Event: Executed\\n\\t */\\n\\tfunction execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\\n\\n\\t/**\\n\\t * @dev Returns the full key data, if present in the identity.\\n\\t */\\n\\tfunction getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\\n\\n\\t/**\\n\\t * @dev Returns the list of purposes associated with a key.\\n\\t */\\n\\tfunction getKeyPurposes(bytes32 _key) external view returns (uint256[] memory _purposes);\\n\\n\\t/**\\n\\t * @dev Returns an array of public key bytes32 held by this identity.\\n\\t */\\n\\tfunction getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\\n\\n\\t/**\\n\\t * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\\n\\t */\\n\\tfunction keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\\n}\\n\",\"keccak256\":\"0xf409f08bfdd6b283a6bcdaf2fc1780f43815d3ed9b25baaad16133cc64b072ae\",\"license\":\"GPL-3.0\"},\"src/interface/IImplementationAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IImplementationAuthority {\\n\\t// event emitted when the implementation contract is updated\\n\\tevent UpdatedImplementation(address newAddress);\\n\\n\\t/**\\n\\t * @dev updates the address used as implementation by the proxies linked\\n\\t * to this ImplementationAuthority contract\\n\\t * @param _newImplementation the address of the new implementation contract\\n\\t * only Owner can call\\n\\t */\\n\\tfunction updateImplementation(address _newImplementation) external;\\n\\n\\t/**\\n\\t * @dev returns the address of the implementation\\n\\t */\\n\\tfunction getImplementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x949a5f9238b5e95797eeef34e34c05ad9546d41b17be5be54acb5859a3c99918\",\"license\":\"GPL-3.0\"},\"src/proxy/IdentityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../interface/IImplementationAuthority.sol\\\";\\n\\ncontract IdentityProxy {\\n\\t/**\\n\\t *  @dev constructor of the proxy Identity contract\\n\\t *  @param _implementationAuthority the implementation Authority contract address\\n\\t *  @param initialManagementKey the management key at deployment\\n\\t *  the proxy is going to use the logic deployed on the implementation contract\\n\\t *  deployed at an address listed in the ImplementationAuthority contract\\n\\t */\\n\\tconstructor(address _implementationAuthority, address initialManagementKey) {\\n\\t\\trequire(_implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(initialManagementKey != address(0), \\\"invalid argument - zero address\\\");\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tsstore(0x821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc, _implementationAuthority)\\n\\t\\t}\\n\\n\\t\\taddress logic = IImplementationAuthority(_implementationAuthority).getImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"initialize(address)\\\", initialManagementKey));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t/**\\n\\t *  @dev fallback proxy function used for any transaction call that is made using\\n\\t *  the Identity contract ABI and called on the proxy contract\\n\\t *  The proxy will update its local storage depending on the behaviour requested\\n\\t *  by the implementation contract given by the Implementation Authority\\n\\t */\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = IImplementationAuthority(implementationAuthority()).getImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction implementationAuthority() public view returns (address) {\\n\\t\\taddress implemAuth;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\timplemAuth := sload(0x821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc)\\n\\t\\t}\\n\\t\\treturn implemAuth;\\n\\t}\\n}\\n\",\"keccak256\":\"0x0d1c2daaf19d9e4fb2afe29a5ccffd598caaa4baa33a99015031392bd92b88a0\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a0346200012d57601f62002d0538819003918201601f19168301916001600160401b03831184841017620001325780849260409485528339810103126200012d5780516001600160a01b03808216928383036200012d5760200151928315158094036200012d576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a315620000eb575060805260ff801960075416911617600755604051612bbc90816200014982396080518181816102aa0152818161065801528181610f240152611c620152f35b62461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101562000014575b600080fd5b60003560e01c80630fffbaf3146200016b5780632307f88214620002525780632c8aa6de14620002475780632fea7b81146200023c5780633a50045114620002315780633d56ff6614620002265780633e3bc3d7146200021b578063422c29a414620002105780634a2a333214620001a25780635027dbe214620002055780635977043814620001fa578063715018a614620001ef5780637b6b91c714620001e45780638da5cb5b14620001d95780638dd1480214620001ce5780638e952bfe14620001c3578063937529ef14620001b85780639ce1936514620001ad578063ab12c35f14620001a2578063b4442b7b1462000197578063b4dc5aac146200018c578063b8bb81261462000181578063e061646b1462000176578063e78cea92146200016b578063f2fde38b14620001605763fe5cd59a146200015657600080fd5b6200000f6200179e565b506200000f62001686565b506200000f6200025d565b506200000f620015b8565b506200000f62001471565b506200000f62001347565b506200000f620011a4565b506200000f62000895565b506200000f620010c0565b506200000f62000fd1565b506200000f62000e3c565b506200000f62000ddb565b506200000f62000db1565b506200000f62000c3c565b506200000f62000b86565b506200000f62000b46565b506200000f620008de565b506200000f620007eb565b506200000f62000761565b506200000f620004b3565b506200000f6200035d565b506200000f62000322565b506200000f620002ce565b506200000f62000287565b50346200000f5760006003193601126200000f5760206001600160a01b03600a5416604051908152f35b50346200000f5760006003193601126200000f5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346200000f5760006003193601126200000f57602060ff600754166040519015158152f35b600435906001600160a01b03821682036200000f57565b602435906001600160a01b03821682036200000f57565b50346200000f5760206003193601126200000f5760206200034c62000346620002f4565b6200252b565b6001600160a01b0360405191168152f35b50346200000f5760206003193601126200000f5760043567ffffffffffffffff8082116200000f57366023830112156200000f5781600401359081116200000f5736602482840101116200000f57620003c2620003c9916024620003db94016200256f565b5460ff1690565b60405190151581529081906020820190565b0390f35b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176200041357604052565b6200041d620003df565b604052565b90601f601f19910116810190811067ffffffffffffffff8211176200041357604052565b81601f820112156200000f5780359067ffffffffffffffff8211620004a3575b60405192620004806020601f19601f860116018562000422565b828452602083830101116200000f57816000926020809301838601378301015290565b620004ad620003df565b62000466565b50346200000f5760606003193601126200000f57620004d1620002f4565b620004db6200030b565b9060443567ffffffffffffffff81116200000f5762000503620003db91369060040162000446565b9262000526620003c2336001600160a01b03166000526001602052604060002090565b80156200073b575b62000539906200204c565b620006fb6001600160a01b039362000692620006856200067e620005ea88851699620005678b1515620018d5565b620005768a89161515620018d5565b620005e460405160208101816200058e858362001946565b0391620005a4601f199384810183528262000422565b51902090604051620005d9602082019282620005cc8560409060208152600060208201520190565b0390810183528262000422565b519020141562001974565b62002098565b956200060c6200060662000602620003c28a62001a1a565b1590565b62001a42565b620006566200064f6200064362000636886001600160a01b03166000526005602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b15620020f0565b7f00000000000000000000000000000000000000000000000000000000000000008762002588565b9462001a1a565b600160ff19825416179055565b620006dd83620006b5836001600160a01b03166000526005602052604060002090565b906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b620006b5836001600160a01b03166000526006602052604060002090565b6040519384938216907fa8261d398ddc63db24cc53cd0c63c9464cabad1bc478ede2107b32c1c4010b7a600080a36001600160a01b031682526020820190565b506200053962000757620006436000546001600160a01b031690565b331490506200052e565b50346200000f5760206003193601126200000f576001600160a01b0362000787620002f4565b166000526001602052602060ff604060002054166040519015158152f35b6020908160408183019282815285518094520193019160005b828110620007cd575050505090565b83516001600160a01b031685529381019392810192600101620007be565b50346200000f576020806003193601126200000f576001600160a01b038062000813620002f4565b1660005260048252604060002091604051809282855492838152019460005282600020926000915b8383106200086357620003db8662000856818a038262000422565b60405191829182620007a5565b84548116875295810195600194850194909201916200083b565b6004359067ffffffffffffffff821682036200000f57565b50346200000f5760206003193601126200000f5767ffffffffffffffff620008bc6200087d565b16600052600860205260206001600160a01b0360406000205416604051908152f35b50346200000f5760206003193601126200000f57620008fc620002f4565b6001600160a01b03908181169162000916831515620018d5565b6200092433841415620022de565b6200097a6200094a62000636336001600160a01b03166000526003602052604060002090565b82620009716200064362000636876001600160a01b03166000526003602052604060002090565b91161462002350565b620009db620009be620009a462000636856001600160a01b03166000526003602052604060002090565b936001600160a01b03166000526003602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff198154169055565b620009f9826001600160a01b03166000526004602052604060002090565b549160005b83811062000a32575b818316857f35e6fc363a4bf723d53b26c1a751674aca9c3ead425f0591f84f5540ede86f12600080a3005b8462000a776200064362000a648462000a5e876001600160a01b03166000526004602052604060002090565b62001b16565b90546001600160a01b039160031b1c1690565b1462000a8e5762000a889062001f6e565b620009fe565b62000af062000ad162000a6484959662000aca62000ac362000b15976001600160a01b03166000526004602052604060002090565b916200239c565b9062001b16565b9162000a5e856001600160a01b03166000526004602052604060002090565b90919082549060031b916001600160a01b039283811b93849216901b16911916179055565b62000b3d62000b37826001600160a01b03166000526004602052604060002090565b620023cd565b81903862000a07565b50346200000f5760206003193601126200000f5760206001600160a01b038062000b6f620002f4565b166000526006825260406000205416604051908152f35b50346200000f5760008060031936011262000bf25762000ba56200187c565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b6020908160408183019282815285518094520193019160005b82811062000c1d575050505090565b835167ffffffffffffffff168552938101939281019260010162000c0e565b50346200000f5760006003193601126200000f576040805160095480825291602082016009600052927f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af906000915b81600384011062000d44579462000cd0928592620003db97549181811062000d28575b81811062000d0a575b81811062000cea575b1062000cdb575b50038362000422565b519182918262000bf5565b60c01c81526020013862000cc7565b608083901c67ffffffffffffffff16845292600190602001930162000cc0565b82871c67ffffffffffffffff16845292600190602001930162000cb7565b67ffffffffffffffff8316845292600190602001930162000cae565b94600160049187549062000da567ffffffffffffffff9262000d718385831667ffffffffffffffff169052565b67ffffffffffffffff818a1c851616602084015267ffffffffffffffff608082811c90951616838a015260c01c6060830152565b01960192019162000c8b565b50346200000f5760006003193601126200000f5760206001600160a01b0360005416604051908152f35b50346200000f5760206003193601126200000f576001600160a01b0362000e01620002f4565b62000e0b6200187c565b1662000e19811515620018d5565b73ffffffffffffffffffffffffffffffffffffffff19600a541617600a55600080f35b50346200000f5760406003193601126200000f5762000e5a620002f4565b60243567ffffffffffffffff81116200000f5762000e7d90369060040162000446565b9062000e886200187c565b620003db6001600160a01b039162000f9162000ecc8483169562000eae871515620018d5565b62000ec660405160208101816200058e858362001946565b620019c0565b9162000ee46200060662000602620003c28662001a1a565b62000f1562000f0e6200064362000636846001600160a01b03166000526003602052604060002090565b1562001a8e565b62000f4a620006856200067e837f00000000000000000000000000000000000000000000000000000000000000008762002588565b62000f6d83620006b5836001600160a01b03166000526003602052604060002090565b62000f8b836001600160a01b03166000526004602052604060002090565b62001b40565b6040519384938216907f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a36001600160a01b031682526020820190565b50346200000f5760206003193601126200000f5762000fef620002f4565b62000ff96200187c565b6001600160a01b03811662001010811515620018d5565b600091818352600160205260ff604084205416156200107c576200104b62001055916001600160a01b03166000526001602052604060002090565b60ff198154169055565b7fd1fd5274f793d20291c0abfe42e1ef63213a11b34996d485f7afb8fe014248518280a280f35b606460405162461bcd60e51b815260206004820152600d60248201527f6e6f74206120666163746f7279000000000000000000000000000000000000006044820152fd5b50346200000f5760206003193601126200000f57620010de620002f4565b620010e86200187c565b6001600160a01b038116620010ff811515620018d5565b600091818352600160205260ff60408420541662001160576200068562001139916001600160a01b03166000526001602052604060002090565b7f45eb8ac5344d2d3f306550fe6e969ca4190526313c512afed851d052bf2ab2fd8280a280f35b606460405162461bcd60e51b815260206004820152601160248201527f616c7265616479206120666163746f72790000000000000000000000000000006044820152fd5b50346200000f5760206003193601126200000f57620011c26200087d565b620011cc6200187c565b620012046001600160a01b03620011fb620006368467ffffffffffffffff166000526008602052604060002090565b1615156200249c565b62001227620009be8267ffffffffffffffff166000526008602052604060002090565b60095467ffffffffffffffff82811660005b8381106200127f575b60405167ffffffffffffffff861681527fcea06f9f2bc78e7d1b24fb4ae56d46f703c06c45641f8ee24441d9331b2228e89080602081015b0390a1005b8183620012a462001290846200240e565b905467ffffffffffffffff9160031b1c1690565b1614620012bc57620012b69062001f6e565b62001239565b7fcea06f9f2bc78e7d1b24fb4ae56d46f703c06c45641f8ee24441d9331b2228e89492506200133491506200130e6200130762001290620013016200127a976200239c565b6200240e565b916200240e565b90919082549060031b9167ffffffffffffffff9283811b93849216901b16911916179055565b6200133e620024e8565b91388062001242565b50346200000f5760406003193601126200000f57620013656200087d565b6200136f6200030b565b620013796200187c565b6001600160a01b03620013908183161515620018d5565b67ffffffffffffffff83166000526008602052604060002054166200142d5781620013f582620006b57f5f96ab40325192cab762ef9c78bdfef531ba4db59f9fe38b7607ba40aff7b75e9567ffffffffffffffff166000526008602052604060002090565b620014008162002460565b6040805167ffffffffffffffff90921682526001600160a01b03909216602082015290819081016200127a565b606460405162461bcd60e51b815260206004820152601660248201527f726563656976657220616c7265616479206164646564000000000000000000006044820152fd5b50346200000f5760206003193601126200000f576200148f620002f4565b6001600160a01b0380821691620014a8831515620018d5565b620014da620014d26200064362000636336001600160a01b03166000526003602052604060002090565b151562002162565b6200150b620015046200064362000636846001600160a01b03166000526003602052604060002090565b15620021d4565b6200153c620015356200064362000636846001600160a01b03166000526005602052604060002090565b1562002220565b6200158f6200156262000636336001600160a01b03166000526003602052604060002090565b9162000f4a606562001587856001600160a01b03166000526004602052604060002090565b54106200226c565b16907f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a3005b50346200000f5760008060031936011262000bf257600954620015db8162001773565b90604092620015ed8451938462000422565b818352601f19620015fe8362001773565b016020903682860137815b8381106200162057855180620003db8782620007a5565b8067ffffffffffffffff6200163962001680936200240e565b90549060031b1c168452600883526200167a620016608886206001600160a01b0390541690565b6200166c838962001f8d565b906001600160a01b03169052565b62001f6e565b62001609565b50346200000f5760206003193601126200000f57620016a4620002f4565b620016ae6200187c565b6001600160a01b038091168015620017095760009182548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b60209067ffffffffffffffff81116200178e575b60051b0190565b62001798620003df565b62001787565b50346200000f5760606003193601126200000f57620017bc620002f4565b67ffffffffffffffff906024358281116200000f57620017e190369060040162000446565b906044359283116200000f57366023840112156200000f578260040135620018098162001773565b9362001819604051958662000422565b81855260209160248387019160051b830101913683116200000f57602401905b8282106200186c57620003db6200185288888862001b7c565b6040516001600160a01b0390911681529081906020820190565b8135815290830190830162001839565b6001600160a01b036000541633036200189157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15620018dd57565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b60005b838110620019355750506000910152565b818101518382015260200162001924565b601f19601f604093602084526200196d815180928160208801526020888801910162001921565b0116010190565b156200197c57565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152fd5b9062001a18602360405180947f4f49440000000000000000000000000000000000000000000000000000000000602083015262001a07815180926020868601910162001921565b810103600381018552018362000422565b565b602062001a3591816040519382858094519384920162001921565b8101600281520301902090565b1562001a4a57565b606460405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152fd5b1562001a9657565b608460405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152fd5b50634e487b7160e01b600052603260045260246000fd5b805482101562001b30575b60005260206000200190600090565b62001b3a62001aff565b62001b21565b9062000af062001a18928054906801000000000000000082101562001b6c575b60018201815562001b16565b62001b76620003df565b62001b60565b929162001b886200187c565b6001600160a01b03908185169362001ba2851515620018d5565b60409586519162001c0b60209662000ec68886018662001bc3848362001946565b039662001bd9601f199889810183528262000422565b5190208b518a810190620005d98162001bfe8460409060208152600060208201520190565b038a810183528262000422565b9662001c236200060662000602620003c28b62001a1a565b62001c4d62000f0e6200064362000636866001600160a01b03166000526003602052604060002090565b62001c5b8551151562001ee5565b62001c88307f00000000000000000000000000000000000000000000000000000000000000008a62002588565b906000968216965b865181101562001da6578060008a62001d438b8f62001cfa868e62001cf48f8f620005cc62001ce962001cc862001d5c9f8762001f8d565b51938c8a51938491820195869190916001600160a01b036020820193169052565b519020141562001fb3565b62001f8d565b5190519485809481937f1d381240000000000000000000000000000000000000000000000000000000008352600483016040600191939293606081019481528260208201520152565b03925af1801562001d96575b62001d62575b5062001f6e565b62001c90565b62001d86908b3d8d1162001d8e575b62001d7d818362000422565b81019062002025565b503862001d55565b503d62001d71565b62001da06200203f565b62001d4f565b50959662001e8a955062001e2c8162000685949b62001e4996979b949b815162001de98482019282620005cc30869190916001600160a01b036020820193169052565b5190209051809381927f53d413c5000000000000000000000000000000000000000000000000000000008352600483016020600191939293604081019481520152565b038160008d5af1801562001ed5575b62001eb2575b505062001a1a565b62001e6c85620006b5836001600160a01b03166000526003602052604060002090565b62000f8b856001600160a01b03166000526004602052604060002090565b7f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a390565b8162001ecc92903d1062001d8e5762001d7d818362000422565b50388062001e41565b62001edf6200203f565b62001e3b565b1562001eed57565b608460405162461bcd60e51b815260206004820152602560248201527f696e76616c696420617267756d656e74202d20656d707479206c697374206f6660448201527f206b6579730000000000000000000000000000000000000000000000000000006064820152fd5b50634e487b7160e01b600052601160045260246000fd5b600190600019811462001f7f570190565b62001f8962001f57565b0190565b602091815181101562001fa3575b60051b010190565b62001fad62001aff565b62001f9b565b1562001fbb57565b608460405162461bcd60e51b815260206004820152603b60248201527f696e76616c696420617267756d656e74202d2077616c6c657420697320616c7360448201527f6f206c697374656420696e206d616e6167656d656e74206b65797300000000006064820152fd5b908160209103126200000f575180151581036200000f5790565b506040513d6000823e3d90fd5b156200205457565b606460405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920466163746f7279206f72206f776e65722063616e2063616c6c00006044820152fd5b9062001a18602560405180947f546f6b656e0000000000000000000000000000000000000000000000000000006020830152620020df815180926020868601910162001921565b810103600581018552018362000422565b15620020f857565b608460405162461bcd60e51b815260206004820152602360248201527f746f6b656e20616c7265616479206c696e6b656420746f20616e206964656e7460448201527f69747900000000000000000000000000000000000000000000000000000000006064820152fd5b156200216a57565b608460405162461bcd60e51b815260206004820152602960248201527f77616c6c6574206e6f74206c696e6b656420746f20616e206964656e7469747960448201527f20636f6e747261637400000000000000000000000000000000000000000000006064820152fd5b15620021dc57565b606460405162461bcd60e51b815260206004820152601960248201527f6e65772077616c6c657420616c7265616479206c696e6b6564000000000000006044820152fd5b156200222857565b606460405162461bcd60e51b815260206004820152602060248201527f696e76616c696420617267756d656e74202d20746f6b656e20616464726573736044820152fd5b156200227457565b608460405162461bcd60e51b815260206004820152602560248201527f6d617820616d6f756e74206f662077616c6c657473207065722049442065786360448201527f65656465640000000000000000000000000000000000000000000000000000006064820152fd5b15620022e657565b608460405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742062652063616c6c6564206f6e2073656e64657220616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b156200235857565b606460405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061206c696e6b65642077616c6c65742063616e20756e6c696e6b006044820152fd5b906000198201918211620023ac57565b62001a1862001f57565b50634e487b7160e01b600052603160045260246000fd5b60001981548015620023fe575b0190620023e8828262001b16565b6001600160a01b0382549160031b1b1916905555565b62002408620023b6565b620023da565b9060095482101562002450575b600960005260188260021c7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af019260031b1690565b6200245a62001aff565b6200241b565b62001a18906200130e600954680100000000000000008110156200248c575b600181016009556200240e565b62002496620003df565b6200247f565b15620024a457565b606460405162461bcd60e51b815260206004820152601260248201527f7265636569766572206e6f7420616464656400000000000000000000000000006044820152fd5b60001960095480156200251b575b0162002502816200240e565b67ffffffffffffffff82549160031b1b19169055600955565b62002525620023b6565b620024f6565b6001600160a01b039081166000818152600560205260409020548216156200255f5760005260056020526040600020541690565b5060036020526040600020541690565b6020908260405193849283378101600281520301902090565b90620025f99161050762002616604091825160209582620025ad888095018462000422565b8083528383019062002680823962002609865191858301936001600160a01b039c8d80921686521688840152878352620025e783620003f6565b87519a8b955180928888019062001921565b8401915180938684019062001921565b0103808752018562000422565b516200264183828162002633818301968781519384920162001921565b810103808452018262000422565b51902091805191016000f590813b156200000f5781167ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e600080a29056fe6080604090808252346101d4578181610507803803809161002082856101d9565b8339810103126101d457806004610039610046936101fc565b91602093848092016101fc565b6001600160a01b038481169161005d831515610210565b169361006a851515610210565b7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc55855163557887a160e11b815292839182905afa9081156101c957600091610191575b50835163189acdbd60e31b8482019081526024808301949094529281526001600160401b03929091606083019184831184841017610175576000938493885251915af4903d1561018b573d90811161017557835190610116601f8201601f19168501836101d9565b81526000833d92013e5b156101335750516102aa908161025d8239f35b606491519062461bcd60e51b82526004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b50610120565b908382813d83116101c2575b6101a781836101d9565b810103126101bf57506101b9906101fc565b386100ae565b80fd5b503d61019d565b84513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761017557604052565b51906001600160a01b03821682036101d457565b1561021757565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fdfe608080604052600436101561011b575b6000816020816004849561006d73ffffffffffffffffffffffffffffffffffffffff7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc541673ffffffffffffffffffffffffffffffffffffffff1690565b7faaf10f420000000000000000000000000000000000000000000000000000000082525afa90811561010e575b82916100e1575b50368280378136917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8f05a01f43d90816000803e156100dd576000f35b6000fd5b61010091506020903d8211610106575b6100fa826101a4565b01610215565b386100a1565b3d91506100f1565b610116610267565b61009a565b6000803560e01c632307f88214610132575061000f565b90346101a057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760209073ffffffffffffffffffffffffffffffffffffffff7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc54168152f35b5080fd5b601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09101166080016080811067ffffffffffffffff8211176101e657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102625760805173ffffffffffffffffffffffffffffffffffffffff811681036102625790565b600080fd5b506040513d6000823e3d90fdfea2646970667358221220381cea8b9c178cb93b3b0657efb20cac3c2113e6f040b7a705fead7b1448bf1164736f6c63430008110033a264697066735822122061e1f81bcae31e668f3d035d63f7e65d209815cae2c7a3d5f92eb6a7c7002a5d64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436101562000014575b600080fd5b60003560e01c80630fffbaf3146200016b5780632307f88214620002525780632c8aa6de14620002475780632fea7b81146200023c5780633a50045114620002315780633d56ff6614620002265780633e3bc3d7146200021b578063422c29a414620002105780634a2a333214620001a25780635027dbe214620002055780635977043814620001fa578063715018a614620001ef5780637b6b91c714620001e45780638da5cb5b14620001d95780638dd1480214620001ce5780638e952bfe14620001c3578063937529ef14620001b85780639ce1936514620001ad578063ab12c35f14620001a2578063b4442b7b1462000197578063b4dc5aac146200018c578063b8bb81261462000181578063e061646b1462000176578063e78cea92146200016b578063f2fde38b14620001605763fe5cd59a146200015657600080fd5b6200000f6200179e565b506200000f62001686565b506200000f6200025d565b506200000f620015b8565b506200000f62001471565b506200000f62001347565b506200000f620011a4565b506200000f62000895565b506200000f620010c0565b506200000f62000fd1565b506200000f62000e3c565b506200000f62000ddb565b506200000f62000db1565b506200000f62000c3c565b506200000f62000b86565b506200000f62000b46565b506200000f620008de565b506200000f620007eb565b506200000f62000761565b506200000f620004b3565b506200000f6200035d565b506200000f62000322565b506200000f620002ce565b506200000f62000287565b50346200000f5760006003193601126200000f5760206001600160a01b03600a5416604051908152f35b50346200000f5760006003193601126200000f5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346200000f5760006003193601126200000f57602060ff600754166040519015158152f35b600435906001600160a01b03821682036200000f57565b602435906001600160a01b03821682036200000f57565b50346200000f5760206003193601126200000f5760206200034c62000346620002f4565b6200252b565b6001600160a01b0360405191168152f35b50346200000f5760206003193601126200000f5760043567ffffffffffffffff8082116200000f57366023830112156200000f5781600401359081116200000f5736602482840101116200000f57620003c2620003c9916024620003db94016200256f565b5460ff1690565b60405190151581529081906020820190565b0390f35b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176200041357604052565b6200041d620003df565b604052565b90601f601f19910116810190811067ffffffffffffffff8211176200041357604052565b81601f820112156200000f5780359067ffffffffffffffff8211620004a3575b60405192620004806020601f19601f860116018562000422565b828452602083830101116200000f57816000926020809301838601378301015290565b620004ad620003df565b62000466565b50346200000f5760606003193601126200000f57620004d1620002f4565b620004db6200030b565b9060443567ffffffffffffffff81116200000f5762000503620003db91369060040162000446565b9262000526620003c2336001600160a01b03166000526001602052604060002090565b80156200073b575b62000539906200204c565b620006fb6001600160a01b039362000692620006856200067e620005ea88851699620005678b1515620018d5565b620005768a89161515620018d5565b620005e460405160208101816200058e858362001946565b0391620005a4601f199384810183528262000422565b51902090604051620005d9602082019282620005cc8560409060208152600060208201520190565b0390810183528262000422565b519020141562001974565b62002098565b956200060c6200060662000602620003c28a62001a1a565b1590565b62001a42565b620006566200064f6200064362000636886001600160a01b03166000526005602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b15620020f0565b7f00000000000000000000000000000000000000000000000000000000000000008762002588565b9462001a1a565b600160ff19825416179055565b620006dd83620006b5836001600160a01b03166000526005602052604060002090565b906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b620006b5836001600160a01b03166000526006602052604060002090565b6040519384938216907fa8261d398ddc63db24cc53cd0c63c9464cabad1bc478ede2107b32c1c4010b7a600080a36001600160a01b031682526020820190565b506200053962000757620006436000546001600160a01b031690565b331490506200052e565b50346200000f5760206003193601126200000f576001600160a01b0362000787620002f4565b166000526001602052602060ff604060002054166040519015158152f35b6020908160408183019282815285518094520193019160005b828110620007cd575050505090565b83516001600160a01b031685529381019392810192600101620007be565b50346200000f576020806003193601126200000f576001600160a01b038062000813620002f4565b1660005260048252604060002091604051809282855492838152019460005282600020926000915b8383106200086357620003db8662000856818a038262000422565b60405191829182620007a5565b84548116875295810195600194850194909201916200083b565b6004359067ffffffffffffffff821682036200000f57565b50346200000f5760206003193601126200000f5767ffffffffffffffff620008bc6200087d565b16600052600860205260206001600160a01b0360406000205416604051908152f35b50346200000f5760206003193601126200000f57620008fc620002f4565b6001600160a01b03908181169162000916831515620018d5565b6200092433841415620022de565b6200097a6200094a62000636336001600160a01b03166000526003602052604060002090565b82620009716200064362000636876001600160a01b03166000526003602052604060002090565b91161462002350565b620009db620009be620009a462000636856001600160a01b03166000526003602052604060002090565b936001600160a01b03166000526003602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff198154169055565b620009f9826001600160a01b03166000526004602052604060002090565b549160005b83811062000a32575b818316857f35e6fc363a4bf723d53b26c1a751674aca9c3ead425f0591f84f5540ede86f12600080a3005b8462000a776200064362000a648462000a5e876001600160a01b03166000526004602052604060002090565b62001b16565b90546001600160a01b039160031b1c1690565b1462000a8e5762000a889062001f6e565b620009fe565b62000af062000ad162000a6484959662000aca62000ac362000b15976001600160a01b03166000526004602052604060002090565b916200239c565b9062001b16565b9162000a5e856001600160a01b03166000526004602052604060002090565b90919082549060031b916001600160a01b039283811b93849216901b16911916179055565b62000b3d62000b37826001600160a01b03166000526004602052604060002090565b620023cd565b81903862000a07565b50346200000f5760206003193601126200000f5760206001600160a01b038062000b6f620002f4565b166000526006825260406000205416604051908152f35b50346200000f5760008060031936011262000bf25762000ba56200187c565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b6020908160408183019282815285518094520193019160005b82811062000c1d575050505090565b835167ffffffffffffffff168552938101939281019260010162000c0e565b50346200000f5760006003193601126200000f576040805160095480825291602082016009600052927f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af906000915b81600384011062000d44579462000cd0928592620003db97549181811062000d28575b81811062000d0a575b81811062000cea575b1062000cdb575b50038362000422565b519182918262000bf5565b60c01c81526020013862000cc7565b608083901c67ffffffffffffffff16845292600190602001930162000cc0565b82871c67ffffffffffffffff16845292600190602001930162000cb7565b67ffffffffffffffff8316845292600190602001930162000cae565b94600160049187549062000da567ffffffffffffffff9262000d718385831667ffffffffffffffff169052565b67ffffffffffffffff818a1c851616602084015267ffffffffffffffff608082811c90951616838a015260c01c6060830152565b01960192019162000c8b565b50346200000f5760006003193601126200000f5760206001600160a01b0360005416604051908152f35b50346200000f5760206003193601126200000f576001600160a01b0362000e01620002f4565b62000e0b6200187c565b1662000e19811515620018d5565b73ffffffffffffffffffffffffffffffffffffffff19600a541617600a55600080f35b50346200000f5760406003193601126200000f5762000e5a620002f4565b60243567ffffffffffffffff81116200000f5762000e7d90369060040162000446565b9062000e886200187c565b620003db6001600160a01b039162000f9162000ecc8483169562000eae871515620018d5565b62000ec660405160208101816200058e858362001946565b620019c0565b9162000ee46200060662000602620003c28662001a1a565b62000f1562000f0e6200064362000636846001600160a01b03166000526003602052604060002090565b1562001a8e565b62000f4a620006856200067e837f00000000000000000000000000000000000000000000000000000000000000008762002588565b62000f6d83620006b5836001600160a01b03166000526003602052604060002090565b62000f8b836001600160a01b03166000526004602052604060002090565b62001b40565b6040519384938216907f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a36001600160a01b031682526020820190565b50346200000f5760206003193601126200000f5762000fef620002f4565b62000ff96200187c565b6001600160a01b03811662001010811515620018d5565b600091818352600160205260ff604084205416156200107c576200104b62001055916001600160a01b03166000526001602052604060002090565b60ff198154169055565b7fd1fd5274f793d20291c0abfe42e1ef63213a11b34996d485f7afb8fe014248518280a280f35b606460405162461bcd60e51b815260206004820152600d60248201527f6e6f74206120666163746f7279000000000000000000000000000000000000006044820152fd5b50346200000f5760206003193601126200000f57620010de620002f4565b620010e86200187c565b6001600160a01b038116620010ff811515620018d5565b600091818352600160205260ff60408420541662001160576200068562001139916001600160a01b03166000526001602052604060002090565b7f45eb8ac5344d2d3f306550fe6e969ca4190526313c512afed851d052bf2ab2fd8280a280f35b606460405162461bcd60e51b815260206004820152601160248201527f616c7265616479206120666163746f72790000000000000000000000000000006044820152fd5b50346200000f5760206003193601126200000f57620011c26200087d565b620011cc6200187c565b620012046001600160a01b03620011fb620006368467ffffffffffffffff166000526008602052604060002090565b1615156200249c565b62001227620009be8267ffffffffffffffff166000526008602052604060002090565b60095467ffffffffffffffff82811660005b8381106200127f575b60405167ffffffffffffffff861681527fcea06f9f2bc78e7d1b24fb4ae56d46f703c06c45641f8ee24441d9331b2228e89080602081015b0390a1005b8183620012a462001290846200240e565b905467ffffffffffffffff9160031b1c1690565b1614620012bc57620012b69062001f6e565b62001239565b7fcea06f9f2bc78e7d1b24fb4ae56d46f703c06c45641f8ee24441d9331b2228e89492506200133491506200130e6200130762001290620013016200127a976200239c565b6200240e565b916200240e565b90919082549060031b9167ffffffffffffffff9283811b93849216901b16911916179055565b6200133e620024e8565b91388062001242565b50346200000f5760406003193601126200000f57620013656200087d565b6200136f6200030b565b620013796200187c565b6001600160a01b03620013908183161515620018d5565b67ffffffffffffffff83166000526008602052604060002054166200142d5781620013f582620006b57f5f96ab40325192cab762ef9c78bdfef531ba4db59f9fe38b7607ba40aff7b75e9567ffffffffffffffff166000526008602052604060002090565b620014008162002460565b6040805167ffffffffffffffff90921682526001600160a01b03909216602082015290819081016200127a565b606460405162461bcd60e51b815260206004820152601660248201527f726563656976657220616c7265616479206164646564000000000000000000006044820152fd5b50346200000f5760206003193601126200000f576200148f620002f4565b6001600160a01b0380821691620014a8831515620018d5565b620014da620014d26200064362000636336001600160a01b03166000526003602052604060002090565b151562002162565b6200150b620015046200064362000636846001600160a01b03166000526003602052604060002090565b15620021d4565b6200153c620015356200064362000636846001600160a01b03166000526005602052604060002090565b1562002220565b6200158f6200156262000636336001600160a01b03166000526003602052604060002090565b9162000f4a606562001587856001600160a01b03166000526004602052604060002090565b54106200226c565b16907f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a3005b50346200000f5760008060031936011262000bf257600954620015db8162001773565b90604092620015ed8451938462000422565b818352601f19620015fe8362001773565b016020903682860137815b8381106200162057855180620003db8782620007a5565b8067ffffffffffffffff6200163962001680936200240e565b90549060031b1c168452600883526200167a620016608886206001600160a01b0390541690565b6200166c838962001f8d565b906001600160a01b03169052565b62001f6e565b62001609565b50346200000f5760206003193601126200000f57620016a4620002f4565b620016ae6200187c565b6001600160a01b038091168015620017095760009182548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b60209067ffffffffffffffff81116200178e575b60051b0190565b62001798620003df565b62001787565b50346200000f5760606003193601126200000f57620017bc620002f4565b67ffffffffffffffff906024358281116200000f57620017e190369060040162000446565b906044359283116200000f57366023840112156200000f578260040135620018098162001773565b9362001819604051958662000422565b81855260209160248387019160051b830101913683116200000f57602401905b8282106200186c57620003db6200185288888862001b7c565b6040516001600160a01b0390911681529081906020820190565b8135815290830190830162001839565b6001600160a01b036000541633036200189157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15620018dd57565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b60005b838110620019355750506000910152565b818101518382015260200162001924565b601f19601f604093602084526200196d815180928160208801526020888801910162001921565b0116010190565b156200197c57565b606460405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152fd5b9062001a18602360405180947f4f49440000000000000000000000000000000000000000000000000000000000602083015262001a07815180926020868601910162001921565b810103600381018552018362000422565b565b602062001a3591816040519382858094519384920162001921565b8101600281520301902090565b1562001a4a57565b606460405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152fd5b1562001a9657565b608460405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152fd5b50634e487b7160e01b600052603260045260246000fd5b805482101562001b30575b60005260206000200190600090565b62001b3a62001aff565b62001b21565b9062000af062001a18928054906801000000000000000082101562001b6c575b60018201815562001b16565b62001b76620003df565b62001b60565b929162001b886200187c565b6001600160a01b03908185169362001ba2851515620018d5565b60409586519162001c0b60209662000ec68886018662001bc3848362001946565b039662001bd9601f199889810183528262000422565b5190208b518a810190620005d98162001bfe8460409060208152600060208201520190565b038a810183528262000422565b9662001c236200060662000602620003c28b62001a1a565b62001c4d62000f0e6200064362000636866001600160a01b03166000526003602052604060002090565b62001c5b8551151562001ee5565b62001c88307f00000000000000000000000000000000000000000000000000000000000000008a62002588565b906000968216965b865181101562001da6578060008a62001d438b8f62001cfa868e62001cf48f8f620005cc62001ce962001cc862001d5c9f8762001f8d565b51938c8a51938491820195869190916001600160a01b036020820193169052565b519020141562001fb3565b62001f8d565b5190519485809481937f1d381240000000000000000000000000000000000000000000000000000000008352600483016040600191939293606081019481528260208201520152565b03925af1801562001d96575b62001d62575b5062001f6e565b62001c90565b62001d86908b3d8d1162001d8e575b62001d7d818362000422565b81019062002025565b503862001d55565b503d62001d71565b62001da06200203f565b62001d4f565b50959662001e8a955062001e2c8162000685949b62001e4996979b949b815162001de98482019282620005cc30869190916001600160a01b036020820193169052565b5190209051809381927f53d413c5000000000000000000000000000000000000000000000000000000008352600483016020600191939293604081019481520152565b038160008d5af1801562001ed5575b62001eb2575b505062001a1a565b62001e6c85620006b5836001600160a01b03166000526003602052604060002090565b62000f8b856001600160a01b03166000526004602052604060002090565b7f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c6600080a390565b8162001ecc92903d1062001d8e5762001d7d818362000422565b50388062001e41565b62001edf6200203f565b62001e3b565b1562001eed57565b608460405162461bcd60e51b815260206004820152602560248201527f696e76616c696420617267756d656e74202d20656d707479206c697374206f6660448201527f206b6579730000000000000000000000000000000000000000000000000000006064820152fd5b50634e487b7160e01b600052601160045260246000fd5b600190600019811462001f7f570190565b62001f8962001f57565b0190565b602091815181101562001fa3575b60051b010190565b62001fad62001aff565b62001f9b565b1562001fbb57565b608460405162461bcd60e51b815260206004820152603b60248201527f696e76616c696420617267756d656e74202d2077616c6c657420697320616c7360448201527f6f206c697374656420696e206d616e6167656d656e74206b65797300000000006064820152fd5b908160209103126200000f575180151581036200000f5790565b506040513d6000823e3d90fd5b156200205457565b606460405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920466163746f7279206f72206f776e65722063616e2063616c6c00006044820152fd5b9062001a18602560405180947f546f6b656e0000000000000000000000000000000000000000000000000000006020830152620020df815180926020868601910162001921565b810103600581018552018362000422565b15620020f857565b608460405162461bcd60e51b815260206004820152602360248201527f746f6b656e20616c7265616479206c696e6b656420746f20616e206964656e7460448201527f69747900000000000000000000000000000000000000000000000000000000006064820152fd5b156200216a57565b608460405162461bcd60e51b815260206004820152602960248201527f77616c6c6574206e6f74206c696e6b656420746f20616e206964656e7469747960448201527f20636f6e747261637400000000000000000000000000000000000000000000006064820152fd5b15620021dc57565b606460405162461bcd60e51b815260206004820152601960248201527f6e65772077616c6c657420616c7265616479206c696e6b6564000000000000006044820152fd5b156200222857565b606460405162461bcd60e51b815260206004820152602060248201527f696e76616c696420617267756d656e74202d20746f6b656e20616464726573736044820152fd5b156200227457565b608460405162461bcd60e51b815260206004820152602560248201527f6d617820616d6f756e74206f662077616c6c657473207065722049442065786360448201527f65656465640000000000000000000000000000000000000000000000000000006064820152fd5b15620022e657565b608460405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742062652063616c6c6564206f6e2073656e64657220616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b156200235857565b606460405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061206c696e6b65642077616c6c65742063616e20756e6c696e6b006044820152fd5b906000198201918211620023ac57565b62001a1862001f57565b50634e487b7160e01b600052603160045260246000fd5b60001981548015620023fe575b0190620023e8828262001b16565b6001600160a01b0382549160031b1b1916905555565b62002408620023b6565b620023da565b9060095482101562002450575b600960005260188260021c7f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af019260031b1690565b6200245a62001aff565b6200241b565b62001a18906200130e600954680100000000000000008110156200248c575b600181016009556200240e565b62002496620003df565b6200247f565b15620024a457565b606460405162461bcd60e51b815260206004820152601260248201527f7265636569766572206e6f7420616464656400000000000000000000000000006044820152fd5b60001960095480156200251b575b0162002502816200240e565b67ffffffffffffffff82549160031b1b19169055600955565b62002525620023b6565b620024f6565b6001600160a01b039081166000818152600560205260409020548216156200255f5760005260056020526040600020541690565b5060036020526040600020541690565b6020908260405193849283378101600281520301902090565b90620025f99161050762002616604091825160209582620025ad888095018462000422565b8083528383019062002680823962002609865191858301936001600160a01b039c8d80921686521688840152878352620025e783620003f6565b87519a8b955180928888019062001921565b8401915180938684019062001921565b0103808752018562000422565b516200264183828162002633818301968781519384920162001921565b810103808452018262000422565b51902091805191016000f590813b156200000f5781167ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e600080a29056fe6080604090808252346101d4578181610507803803809161002082856101d9565b8339810103126101d457806004610039610046936101fc565b91602093848092016101fc565b6001600160a01b038481169161005d831515610210565b169361006a851515610210565b7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc55855163557887a160e11b815292839182905afa9081156101c957600091610191575b50835163189acdbd60e31b8482019081526024808301949094529281526001600160401b03929091606083019184831184841017610175576000938493885251915af4903d1561018b573d90811161017557835190610116601f8201601f19168501836101d9565b81526000833d92013e5b156101335750516102aa908161025d8239f35b606491519062461bcd60e51b82526004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152fd5b634e487b7160e01b600052604160045260246000fd5b50610120565b908382813d83116101c2575b6101a781836101d9565b810103126101bf57506101b9906101fc565b386100ae565b80fd5b503d61019d565b84513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761017557604052565b51906001600160a01b03821682036101d457565b1561021757565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fdfe608080604052600436101561011b575b6000816020816004849561006d73ffffffffffffffffffffffffffffffffffffffff7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc541673ffffffffffffffffffffffffffffffffffffffff1690565b7faaf10f420000000000000000000000000000000000000000000000000000000082525afa90811561010e575b82916100e1575b50368280378136917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd8f05a01f43d90816000803e156100dd576000f35b6000fd5b61010091506020903d8211610106575b6100fa826101a4565b01610215565b386100a1565b3d91506100f1565b610116610267565b61009a565b6000803560e01c632307f88214610132575061000f565b90346101a057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05760209073ffffffffffffffffffffffffffffffffffffffff7f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc54168152f35b5080fd5b601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09101166080016080811067ffffffffffffffff8211176101e657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102625760805173ffffffffffffffffffffffffffffffffffffffff811681036102625790565b600080fd5b506040513d6000823e3d90fdfea2646970667358221220381cea8b9c178cb93b3b0657efb20cac3c2113e6f040b7a705fead7b1448bf1164736f6c63430008110033a264697066735822122061e1f81bcae31e668f3d035d63f7e65d209815cae2c7a3d5f92eb6a7c7002a5d64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addReceiver(uint64,address)": {
        "details": "See {IdFactory-addReceiver}."
      },
      "addTokenFactory(address)": {
        "details": "See {IdFactory-addTokenFactory}."
      },
      "createIdentity(address,string)": {
        "details": "See {IdFactory-createIdentity}."
      },
      "createIdentityWithManagementKeys(address,string,bytes32[])": {
        "details": "See {IdFactory-createIdentityWithManagementKeys}."
      },
      "createTokenIdentity(address,address,string)": {
        "details": "See {IdFactory-createTokenIdentity}."
      },
      "getBridge()": {
        "details": "get bridge address"
      },
      "getChainSelectors()": {
        "details": "See {IdFactory-getChainSelectors}."
      },
      "getIdentity(address)": {
        "details": "See {IdFactory-getIdentity}."
      },
      "getReceiver(uint64)": {
        "details": "See {IdFactory-getReceiver}."
      },
      "getReceivers()": {
        "details": "See {IdFactory-getReceivers}."
      },
      "getToken(address)": {
        "details": "See {IdFactory-getToken}."
      },
      "getWallets(address)": {
        "details": "See {IdFactory-getWallets}."
      },
      "implementationAuthority()": {
        "details": "See {IdFactory-implementationAuthority}."
      },
      "isSaltTaken(string)": {
        "details": "See {IdFactory-isSaltTaken}."
      },
      "isTokenFactory(address)": {
        "details": "See {IdFactory-isTokenFactory}."
      },
      "linkWallet(address)": {
        "details": "See {IdFactory-linkWallet}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeReceiver(uint64)": {
        "details": "See {IdFactory-removeReceiver}."
      },
      "removeTokenFactory(address)": {
        "details": "See {IdFactory-removeTokenFactory}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setBridge(address)": {
        "params": {
          "_bridge": "the address of the bridge contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlinkWallet(address)": {
        "details": "See {IdFactory-unlinkWallet}."
      }
    },
    "stateVariables": {
      "bridge": {
        "details": "getter for the bridge contract address"
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deployed(address)": {
        "notice": "events"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4494,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenFactories",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4500,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_saltTaken",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 4504,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_userIdentity",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4509,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_wallets",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 4513,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenIdentity",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4517,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 4519,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_isHomeChain",
        "offset": 0,
        "slot": "7",
        "type": "t_bool"
      },
      {
        "astId": 4523,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "destinationChainSelectorToReceiver",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint64,t_address)"
      },
      {
        "astId": 4526,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "chainSelectors",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint64)dyn_storage"
      },
      {
        "astId": 4528,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "bridge",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint64,t_address)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}