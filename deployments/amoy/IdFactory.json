{
  "address": "0x86B367f7B843F957273254361961A69bD184aCAc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementationAuthority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "TokenFactoryAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "TokenFactoryRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "TokenLinked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "WalletLinked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "identity",
          "type": "address"
        }
      ],
      "name": "WalletUnlinked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "addTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "createIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        },
        {
          "internalType": "bytes32[]",
          "name": "_managementKeys",
          "type": "bytes32[]"
        }
      ],
      "name": "createIdentityWithManagementKeys",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "createTokenIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "getIdentity",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_identity",
          "type": "address"
        }
      ],
      "name": "getWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementationAuthority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_salt",
          "type": "string"
        }
      ],
      "name": "isSaltTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "isTokenFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newWallet",
          "type": "address"
        }
      ],
      "name": "linkWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "removeTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldWallet",
          "type": "address"
        }
      ],
      "name": "unlinkWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5064cf4075ba946408a0ca2301e9484ff4c32048583cf764d836e9907e66a5cf",
  "receipt": {
    "to": null,
    "from": "0x5EB124675c38ff71d81760F5F9A3D75BF7509FE0",
    "contractAddress": "0x86B367f7B843F957273254361961A69bD184aCAc",
    "transactionIndex": 496,
    "gasUsed": "2177527",
    "logsBloom": "0x
    "blockHash": "0x2c77e4f55c91e44dbd5d77b4701eb48da34c08034fd887df9b87996e4a95ebb9",
    "transactionHash": "0x5064cf4075ba946408a0ca2301e9484ff4c32048583cf764d836e9907e66a5cf",
    "logs": [
      {
        "transactionIndex": 496,
        "blockNumber": 6046588,
        "transactionHash": "0x5064cf4075ba946408a0ca2301e9484ff4c32048583cf764d836e9907e66a5cf",
        "address": "0x86B367f7B843F957273254361961A69bD184aCAc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005eb124675c38ff71d81760f5f9a3d75bf7509fe0"
        ],
        "data": "0x",
        "logIndex": 992,
        "blockHash": "0x2c77e4f55c91e44dbd5d77b4701eb48da34c08034fd887df9b87996e4a95ebb9"
      },
      {
        "transactionIndex": 496,
        "blockNumber": 6046588,
        "transactionHash": "0x5064cf4075ba946408a0ca2301e9484ff4c32048583cf764d836e9907e66a5cf",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005eb124675c38ff71d81760f5f9a3d75bf7509fe0",
          "0x0000000000000000000000004631753190f2f5a15a7ba172bbac102b7d95fa22"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000e7faa983a874e9000000000000000000000000000000000000000000000000019d0877bd3568b50000000000000000000000000000000000000000000000445a1706a16b31765900000000000000000000000000000000000000000000000000b50dce398cf3cc0000000000000000000000000000000000000000000000445aff014aeed9eb42",
        "logIndex": 993,
        "blockHash": "0x2c77e4f55c91e44dbd5d77b4701eb48da34c08034fd887df9b87996e4a95ebb9"
      }
    ],
    "blockNumber": 6046588,
    "cumulativeGasUsed": "26019755",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4822CF27eE43aFc6499225E91428F4696647B3a6"
  ],
  "numDeployments": 1,
  "solcInputHash": "1d53299f771fd23f114314547d331b99",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"TokenLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletUnlinked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"addTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_managementKeys\",\"type\":\"bytes32[]\"}],\"name\":\"createIdentityWithManagementKeys\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createTokenIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"isSaltTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"isTokenFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"linkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"removeTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldWallet\",\"type\":\"address\"}],\"name\":\"unlinkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenFactory(address)\":{\"details\":\"See {IdFactory-addTokenFactory}.\"},\"createIdentity(address,string)\":{\"details\":\"See {IdFactory-createIdentity}.\"},\"createIdentityWithManagementKeys(address,string,bytes32[])\":{\"details\":\"See {IdFactory-createIdentityWithManagementKeys}.\"},\"createTokenIdentity(address,address,string)\":{\"details\":\"See {IdFactory-createTokenIdentity}.\"},\"getIdentity(address)\":{\"details\":\"See {IdFactory-getIdentity}.\"},\"getToken(address)\":{\"details\":\"See {IdFactory-getToken}.\"},\"getWallets(address)\":{\"details\":\"See {IdFactory-getWallets}.\"},\"implementationAuthority()\":{\"details\":\"See {IdFactory-implementationAuthority}.\"},\"isSaltTaken(string)\":{\"details\":\"See {IdFactory-isSaltTaken}.\"},\"isTokenFactory(address)\":{\"details\":\"See {IdFactory-isTokenFactory}.\"},\"linkWallet(address)\":{\"details\":\"See {IdFactory-linkWallet}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTokenFactory(address)\":{\"details\":\"See {IdFactory-removeTokenFactory}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlinkWallet(address)\":{\"details\":\"See {IdFactory-unlinkWallet}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deployed(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/factory/IdFactory.sol\":\"IdFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/factory/IIdFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\ninterface IIdFactory {\\n\\t/// events\\n\\n\\t// event emitted whenever a single contract is deployed by the factory\\n\\tevent Deployed(address indexed _addr);\\n\\n\\t// event emitted when a wallet is linked to an ONCHAINID contract\\n\\tevent WalletLinked(address indexed wallet, address indexed identity);\\n\\n\\t// event emitted when a token is linked to an ONCHAINID contract\\n\\tevent TokenLinked(address indexed token, address indexed identity);\\n\\n\\t// event emitted when a wallet is unlinked from an ONCHAINID contract\\n\\tevent WalletUnlinked(address indexed wallet, address indexed identity);\\n\\n\\t// event emitted when an address is registered on the factory as a Token\\n\\t// factory address, granting this address the privilege to issue\\n\\t// Onchain identities for tokens\\n\\tevent TokenFactoryAdded(address indexed factory);\\n\\n\\t// event emitted when a previously recorded token factory address is removed\\n\\tevent TokenFactoryRemoved(address indexed factory);\\n\\n\\t/// functions\\n\\n\\t/**\\n\\t *  @dev function used to create a new Identity proxy from the factory\\n\\t *  @param _wallet the wallet address of the primary owner of this ONCHAINID contract\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  requires a new salt for each deployment\\n\\t *  _wallet cannot be linked to another ONCHAINID\\n\\t *  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility\\n\\t *  of the function, including calls to oracles for multichain\\n\\t *  deployment security (avoid identity theft), defining payment requirements, etc.\\n\\t */\\n\\tfunction createIdentity(address _wallet, string memory _salt) external returns (address);\\n\\n\\t/**\\n\\t *  @dev function used to create a new Identity proxy from the factory, setting the wallet and listed keys as\\n\\t * MANAGEMENT keys.\\n\\t *  @param _wallet the wallet address of the primary owner of this ONCHAINID contract\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  @param _managementKeys A list of keys hash (keccak256(abiEncoded())) to add as MANAGEMENT keys.\\n\\t *  requires a new salt for each deployment\\n\\t *  _wallet cannot be linked to another ONCHAINID\\n\\t *  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility\\n\\t *  of the function, including calls to oracles for multichain\\n\\t *  deployment security (avoid identity theft), defining payment requirements, etc.\\n\\t */\\n\\tfunction createIdentityWithManagementKeys(\\n\\t\\taddress _wallet,\\n\\t\\tstring memory _salt,\\n\\t\\tbytes32[] memory _managementKeys\\n\\t) external returns (address);\\n\\n\\t/**\\n\\t *  @dev function used to create a new Token Identity proxy from the factory\\n\\t *  @param _token the address of the token contract\\n\\t *  @param _tokenOwner the owner address of the token\\n\\t *  @param _salt the salt used by create2 to issue the contract\\n\\t *  requires a new salt for each deployment\\n\\t *  _token cannot be linked to another ONCHAINID\\n\\t *  only Token factory or owner can call (owner should only use its privilege\\n\\t *  for tokens not issued by a Token factory onchain\\n\\t */\\n\\tfunction createTokenIdentity(address _token, address _tokenOwner, string memory _salt) external returns (address);\\n\\n\\t/**\\n\\t *  @dev function used to link a new wallet to an existing identity\\n\\t *  @param _newWallet the address of the wallet to link\\n\\t *  requires msg.sender to be linked to an existing onchainid\\n\\t *  the _newWallet will be linked to the same OID contract as msg.sender\\n\\t *  _newWallet cannot be linked to an OID yet\\n\\t *  _newWallet cannot be address 0\\n\\t *  cannot link more than 100 wallets to an OID, for gas consumption reason\\n\\t */\\n\\tfunction linkWallet(address _newWallet) external;\\n\\n\\t/**\\n\\t *  @dev function used to unlink a wallet from an existing identity\\n\\t *  @param _oldWallet the address of the wallet to unlink\\n\\t *  requires msg.sender to be linked to the same onchainid as _oldWallet\\n\\t *  msg.sender cannot be _oldWallet to keep at least 1 wallet linked to any OID\\n\\t *  _oldWallet cannot be address 0\\n\\t */\\n\\tfunction unlinkWallet(address _oldWallet) external;\\n\\n\\t/**\\n\\t *  @dev function used to register an address as a token factory\\n\\t *  @param _factory the address of the token factory\\n\\t *  can be called only by Owner\\n\\t *  _factory cannot be registered yet\\n\\t *  once the factory has been registered it can deploy token identities\\n\\t */\\n\\tfunction addTokenFactory(address _factory) external;\\n\\n\\t/**\\n\\t *  @dev function used to unregister an address previously registered as a token factory\\n\\t *  @param _factory the address of the token factory\\n\\t *  can be called only by Owner\\n\\t *  _factory has to be registered previously\\n\\t *  once the factory has been unregistered it cannot deploy token identities anymore\\n\\t */\\n\\tfunction removeTokenFactory(address _factory) external;\\n\\n\\t/**\\n\\t *  @dev getter for OID contract corresponding to a wallet/token\\n\\t *  @param _wallet the wallet/token address\\n\\t */\\n\\tfunction getIdentity(address _wallet) external view returns (address);\\n\\n\\t/**\\n\\t *  @dev getter to fetch the array of wallets linked to an OID contract\\n\\t *  @param _identity the address of the OID contract\\n\\t *  returns an array of addresses linked to the OID\\n\\t */\\n\\tfunction getWallets(address _identity) external view returns (address[] memory);\\n\\n\\t/**\\n\\t *  @dev getter to fetch the token address linked to an OID contract\\n\\t *  @param _identity the address of the OID contract\\n\\t *  returns the address linked to the OID\\n\\t */\\n\\tfunction getToken(address _identity) external view returns (address);\\n\\n\\t/**\\n\\t *  @dev getter to know if an address is registered as token factory or not\\n\\t *  @param _factory the address of the factory\\n\\t *  returns true if the address corresponds to a registered factory\\n\\t */\\n\\tfunction isTokenFactory(address _factory) external view returns (bool);\\n\\n\\t/**\\n\\t *  @dev getter to know if a salt is taken for the create2 deployment\\n\\t *  @param _salt the salt used for deployment\\n\\t */\\n\\tfunction isSaltTaken(string calldata _salt) external view returns (bool);\\n\\n\\t/**\\n\\t * @dev getter for the implementation authority used by this factory.\\n\\t */\\n\\tfunction implementationAuthority() external view returns (address);\\n}\\n\",\"keccak256\":\"0xdbbd266f8e7d6d1c6d683166465c2a5ec1b7011b7e6c6a0d40e53f199f2e3fc1\",\"license\":\"GPL-3.0\"},\"src/factory/IdFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\nimport \\\"../proxy/IdentityProxy.sol\\\";\\nimport \\\"./IIdFactory.sol\\\";\\nimport \\\"../interface/IERC734.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract IdFactory is IIdFactory, Ownable {\\n\\tmapping(address => bool) private _tokenFactories;\\n\\n\\t// address of the _implementationAuthority contract making the link to the implementation contract\\n\\taddress private immutable _implementationAuthority;\\n\\n\\t// as it is not possible to deploy 2 times the same contract address, this mapping allows us to check which\\n\\t// salt is taken and which is not\\n\\tmapping(string => bool) private _saltTaken;\\n\\n\\t// ONCHAINID of the wallet owner\\n\\tmapping(address => address) private _userIdentity;\\n\\n\\t// wallets currently linked to an ONCHAINID\\n\\tmapping(address => address[]) private _wallets;\\n\\n\\t// ONCHAINID of the token\\n\\tmapping(address => address) private _tokenIdentity;\\n\\n\\t// token linked to an ONCHAINID\\n\\tmapping(address => address) private _tokenAddress;\\n\\n\\t// setting\\n\\tconstructor(address implementationAuthority) {\\n\\t\\trequire(implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\t_implementationAuthority = implementationAuthority;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-addTokenFactory}.\\n\\t */\\n\\tfunction addTokenFactory(address _factory) external override onlyOwner {\\n\\t\\trequire(_factory != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(!isTokenFactory(_factory), \\\"already a factory\\\");\\n\\t\\t_tokenFactories[_factory] = true;\\n\\t\\temit TokenFactoryAdded(_factory);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-removeTokenFactory}.\\n\\t */\\n\\tfunction removeTokenFactory(address _factory) external override onlyOwner {\\n\\t\\trequire(_factory != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(isTokenFactory(_factory), \\\"not a factory\\\");\\n\\t\\t_tokenFactories[_factory] = false;\\n\\t\\temit TokenFactoryRemoved(_factory);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createIdentity}.\\n\\t */\\n\\tfunction createIdentity(address _wallet, string memory _salt) external override onlyOwner returns (address) {\\n\\t\\trequire(_wallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory oidSalt = string.concat(\\\"OID\\\", _salt);\\n\\t\\trequire(!_saltTaken[oidSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_userIdentity[_wallet] == address(0), \\\"wallet already linked to an identity\\\");\\n\\t\\taddress identity = _deployIdentity(oidSalt, _implementationAuthority, _wallet);\\n\\t\\t_saltTaken[oidSalt] = true;\\n\\t\\t_userIdentity[_wallet] = identity;\\n\\t\\t_wallets[identity].push(_wallet);\\n\\t\\temit WalletLinked(_wallet, identity);\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createIdentityWithManagementKeys}.\\n\\t */\\n\\tfunction createIdentityWithManagementKeys(\\n\\t\\taddress _wallet,\\n\\t\\tstring memory _salt,\\n\\t\\tbytes32[] memory _managementKeys\\n\\t) external override onlyOwner returns (address) {\\n\\t\\trequire(_wallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory oidSalt = string.concat(\\\"OID\\\", _salt);\\n\\t\\trequire(!_saltTaken[oidSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_userIdentity[_wallet] == address(0), \\\"wallet already linked to an identity\\\");\\n\\t\\trequire(_managementKeys.length > 0, \\\"invalid argument - empty list of keys\\\");\\n\\n\\t\\taddress identity = _deployIdentity(oidSalt, _implementationAuthority, address(this));\\n\\n\\t\\tfor (uint i = 0; i < _managementKeys.length; i++) {\\n\\t\\t\\trequire(\\n\\t\\t\\t\\t_managementKeys[i] != keccak256(abi.encode(_wallet)),\\n\\t\\t\\t\\t\\\"invalid argument - wallet is also listed in management keys\\\"\\n\\t\\t\\t);\\n\\t\\t\\tIERC734(identity).addKey(_managementKeys[i], 1, 1);\\n\\t\\t}\\n\\n\\t\\tIERC734(identity).removeKey(keccak256(abi.encode(address(this))), 1);\\n\\n\\t\\t_saltTaken[oidSalt] = true;\\n\\t\\t_userIdentity[_wallet] = identity;\\n\\t\\t_wallets[identity].push(_wallet);\\n\\t\\temit WalletLinked(_wallet, identity);\\n\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-createTokenIdentity}.\\n\\t */\\n\\tfunction createTokenIdentity(\\n\\t\\taddress _token,\\n\\t\\taddress _tokenOwner,\\n\\t\\tstring memory _salt\\n\\t) external override returns (address) {\\n\\t\\trequire(isTokenFactory(msg.sender) || msg.sender == owner(), \\\"only Factory or owner can call\\\");\\n\\t\\trequire(_token != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_tokenOwner != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(keccak256(abi.encode(_salt)) != keccak256(abi.encode(\\\"\\\")), \\\"invalid argument - empty string\\\");\\n\\t\\tstring memory tokenIdSalt = string.concat(\\\"Token\\\", _salt);\\n\\t\\trequire(!_saltTaken[tokenIdSalt], \\\"salt already taken\\\");\\n\\t\\trequire(_tokenIdentity[_token] == address(0), \\\"token already linked to an identity\\\");\\n\\t\\taddress identity = _deployIdentity(tokenIdSalt, _implementationAuthority, _tokenOwner);\\n\\t\\t_saltTaken[tokenIdSalt] = true;\\n\\t\\t_tokenIdentity[_token] = identity;\\n\\t\\t_tokenAddress[identity] = _token;\\n\\t\\temit TokenLinked(_token, identity);\\n\\t\\treturn identity;\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-linkWallet}.\\n\\t */\\n\\tfunction linkWallet(address _newWallet) external override {\\n\\t\\trequire(_newWallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_userIdentity[msg.sender] != address(0), \\\"wallet not linked to an identity contract\\\");\\n\\t\\trequire(_userIdentity[_newWallet] == address(0), \\\"new wallet already linked\\\");\\n\\t\\trequire(_tokenIdentity[_newWallet] == address(0), \\\"invalid argument - token address\\\");\\n\\t\\taddress identity = _userIdentity[msg.sender];\\n\\t\\trequire(_wallets[identity].length < 101, \\\"max amount of wallets per ID exceeded\\\");\\n\\t\\t_userIdentity[_newWallet] = identity;\\n\\t\\t_wallets[identity].push(_newWallet);\\n\\t\\temit WalletLinked(_newWallet, identity);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-unlinkWallet}.\\n\\t */\\n\\tfunction unlinkWallet(address _oldWallet) external override {\\n\\t\\trequire(_oldWallet != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(_oldWallet != msg.sender, \\\"cannot be called on sender address\\\");\\n\\t\\trequire(_userIdentity[msg.sender] == _userIdentity[_oldWallet], \\\"only a linked wallet can unlink\\\");\\n\\t\\taddress _identity = _userIdentity[_oldWallet];\\n\\t\\tdelete _userIdentity[_oldWallet];\\n\\t\\tuint256 length = _wallets[_identity].length;\\n\\t\\tfor (uint256 i = 0; i < length; i++) {\\n\\t\\t\\tif (_wallets[_identity][i] == _oldWallet) {\\n\\t\\t\\t\\t_wallets[_identity][i] = _wallets[_identity][length - 1];\\n\\t\\t\\t\\t_wallets[_identity].pop();\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit WalletUnlinked(_oldWallet, _identity);\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getIdentity}.\\n\\t */\\n\\tfunction getIdentity(address _wallet) external view override returns (address) {\\n\\t\\tif (_tokenIdentity[_wallet] != address(0)) {\\n\\t\\t\\treturn _tokenIdentity[_wallet];\\n\\t\\t} else {\\n\\t\\t\\treturn _userIdentity[_wallet];\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-isSaltTaken}.\\n\\t */\\n\\tfunction isSaltTaken(string calldata _salt) external view override returns (bool) {\\n\\t\\treturn _saltTaken[_salt];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getWallets}.\\n\\t */\\n\\tfunction getWallets(address _identity) external view override returns (address[] memory) {\\n\\t\\treturn _wallets[_identity];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-getToken}.\\n\\t */\\n\\tfunction getToken(address _identity) external view override returns (address) {\\n\\t\\treturn _tokenAddress[_identity];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-isTokenFactory}.\\n\\t */\\n\\tfunction isTokenFactory(address _factory) public view override returns (bool) {\\n\\t\\treturn _tokenFactories[_factory];\\n\\t}\\n\\n\\t/**\\n\\t *  @dev See {IdFactory-implementationAuthority}.\\n\\t */\\n\\tfunction implementationAuthority() public view override returns (address) {\\n\\t\\treturn _implementationAuthority;\\n\\t}\\n\\n\\t// deploy function with create2 opcode call\\n\\t// returns the address of the contract created\\n\\tfunction _deploy(string memory salt, bytes memory bytecode) private returns (address) {\\n\\t\\tbytes32 saltBytes = bytes32(keccak256(abi.encodePacked(salt)));\\n\\t\\taddress addr;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tlet encoded_data := add(0x20, bytecode) // load initialization code.\\n\\t\\t\\tlet encoded_size := mload(bytecode) // load init code's length.\\n\\t\\t\\taddr := create2(0, encoded_data, encoded_size, saltBytes)\\n\\t\\t\\tif iszero(extcodesize(addr)) {\\n\\t\\t\\t\\trevert(0, 0)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\temit Deployed(addr);\\n\\t\\treturn addr;\\n\\t}\\n\\n\\t// function used to deploy an identity using CREATE2\\n\\tfunction _deployIdentity(\\n\\t\\tstring memory _salt,\\n\\t\\taddress implementationAuthority,\\n\\t\\taddress _wallet\\n\\t) private returns (address) {\\n\\t\\tbytes memory _code = type(IdentityProxy).creationCode;\\n\\t\\tbytes memory _constructData = abi.encode(implementationAuthority, _wallet);\\n\\t\\tbytes memory bytecode = abi.encodePacked(_code, _constructData);\\n\\t\\treturn _deploy(_salt, bytecode);\\n\\t}\\n}\\n\",\"keccak256\":\"0x842f6f8a52efa93d9637e51c62b77ebe99fdfcb937fdf52af3d9d344d21f0c04\",\"license\":\"GPL-3.0\"},\"src/interface/IERC734.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.17;\\n\\n/**\\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\\n */\\ninterface IERC734 {\\n\\t/**\\n\\t * @dev Emitted when an execution request was approved.\\n\\t *\\n\\t * Specification: MUST be triggered when approve was successfully called.\\n\\t */\\n\\tevent Approved(uint256 indexed executionId, bool approved);\\n\\n\\t/**\\n\\t * @dev Emitted when an execute operation was approved and successfully performed.\\n\\t *\\n\\t * Specification: MUST be triggered when approve was called and the execution was successfully approved.\\n\\t */\\n\\tevent Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when an execution request was performed via `execute`.\\n\\t *\\n\\t * Specification: MUST be triggered when execute was successfully called.\\n\\t */\\n\\tevent ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when an execute operation was called and failed\\n\\t *\\n\\t * Specification: MUST be triggered when execute call failed\\n\\t */\\n\\tevent ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\\n\\n\\t/**\\n\\t * @dev Emitted when a key was added to the Identity.\\n\\t *\\n\\t * Specification: MUST be triggered when addKey was successfully called.\\n\\t */\\n\\tevent KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n\\t * @dev Emitted when a key was removed from the Identity.\\n\\t *\\n\\t * Specification: MUST be triggered when removeKey was successfully called.\\n\\t */\\n\\tevent KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\\n\\n\\t/**\\n\\t * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\\n\\t *\\n\\t * Triggers Event: `KeyAdded`\\n\\t *\\n\\t * Specification: MUST only be done by keys of purpose 1, or the identity\\n\\t * itself. If it's the identity itself, the approval process will determine its approval.\\n\\t */\\n\\tfunction addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Approves an execution.\\n\\t *\\n\\t * Triggers Event: `Approved`\\n\\t * Triggers on execution successful Event: `Executed`\\n\\t * Triggers on execution failure Event: `ExecutionFailed`\\n\\t */\\n\\tfunction approve(uint256 _id, bool _approve) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Removes _purpose for _key from the identity.\\n\\t *\\n\\t * Triggers Event: `KeyRemoved`\\n\\t *\\n\\t * Specification: MUST only be done by keys of purpose 1, or the identity itself.\\n\\t * If it's the identity itself, the approval process will determine its approval.\\n\\t */\\n\\tfunction removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\\n\\n\\t/**\\n\\t * @dev Passes an execution instruction to an ERC734 identity.\\n\\t * How the execution is handled is up to the identity implementation:\\n\\t * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\\n\\t * approve this execution.\\n\\t * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\\n\\t *\\n\\t * Triggers Event: ExecutionRequested\\n\\t * Triggers on direct execution Event: Executed\\n\\t */\\n\\tfunction execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\\n\\n\\t/**\\n\\t * @dev Returns the full key data, if present in the identity.\\n\\t */\\n\\tfunction getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\\n\\n\\t/**\\n\\t * @dev Returns the list of purposes associated with a key.\\n\\t */\\n\\tfunction getKeyPurposes(bytes32 _key) external view returns (uint256[] memory _purposes);\\n\\n\\t/**\\n\\t * @dev Returns an array of public key bytes32 held by this identity.\\n\\t */\\n\\tfunction getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\\n\\n\\t/**\\n\\t * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\\n\\t */\\n\\tfunction keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\\n}\\n\",\"keccak256\":\"0xf409f08bfdd6b283a6bcdaf2fc1780f43815d3ed9b25baaad16133cc64b072ae\",\"license\":\"GPL-3.0\"},\"src/interface/IImplementationAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IImplementationAuthority {\\n\\t// event emitted when the implementation contract is updated\\n\\tevent UpdatedImplementation(address newAddress);\\n\\n\\t/**\\n\\t * @dev updates the address used as implementation by the proxies linked\\n\\t * to this ImplementationAuthority contract\\n\\t * @param _newImplementation the address of the new implementation contract\\n\\t * only Owner can call\\n\\t */\\n\\tfunction updateImplementation(address _newImplementation) external;\\n\\n\\t/**\\n\\t * @dev returns the address of the implementation\\n\\t */\\n\\tfunction getImplementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x949a5f9238b5e95797eeef34e34c05ad9546d41b17be5be54acb5859a3c99918\",\"license\":\"GPL-3.0\"},\"src/proxy/IdentityProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"../interface/IImplementationAuthority.sol\\\";\\n\\ncontract IdentityProxy {\\n\\t/**\\n\\t *  @dev constructor of the proxy Identity contract\\n\\t *  @param _implementationAuthority the implementation Authority contract address\\n\\t *  @param initialManagementKey the management key at deployment\\n\\t *  the proxy is going to use the logic deployed on the implementation contract\\n\\t *  deployed at an address listed in the ImplementationAuthority contract\\n\\t */\\n\\tconstructor(address _implementationAuthority, address initialManagementKey) {\\n\\t\\trequire(_implementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n\\t\\trequire(initialManagementKey != address(0), \\\"invalid argument - zero address\\\");\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tsstore(0x821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc, _implementationAuthority)\\n\\t\\t}\\n\\n\\t\\taddress logic = IImplementationAuthority(_implementationAuthority).getImplementation();\\n\\n\\t\\t// solhint-disable-next-line avoid-low-level-calls\\n\\t\\t(bool success, ) = logic.delegatecall(abi.encodeWithSignature(\\\"initialize(address)\\\", initialManagementKey));\\n\\t\\trequire(success, \\\"Initialization failed.\\\");\\n\\t}\\n\\n\\t/**\\n\\t *  @dev fallback proxy function used for any transaction call that is made using\\n\\t *  the Identity contract ABI and called on the proxy contract\\n\\t *  The proxy will update its local storage depending on the behaviour requested\\n\\t *  by the implementation contract given by the Implementation Authority\\n\\t */\\n\\t// solhint-disable-next-line no-complex-fallback\\n\\tfallback() external payable {\\n\\t\\taddress logic = IImplementationAuthority(implementationAuthority()).getImplementation();\\n\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\tcalldatacopy(0x0, 0x0, calldatasize())\\n\\t\\t\\tlet success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n\\t\\t\\tlet retSz := returndatasize()\\n\\t\\t\\treturndatacopy(0, 0, retSz)\\n\\t\\t\\tswitch success\\n\\t\\t\\tcase 0 {\\n\\t\\t\\t\\trevert(0, retSz)\\n\\t\\t\\t}\\n\\t\\t\\tdefault {\\n\\t\\t\\t\\treturn(0, retSz)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction implementationAuthority() public view returns (address) {\\n\\t\\taddress implemAuth;\\n\\t\\t// solhint-disable-next-line no-inline-assembly\\n\\t\\tassembly {\\n\\t\\t\\timplemAuth := sload(0x821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc)\\n\\t\\t}\\n\\t\\treturn implemAuth;\\n\\t}\\n}\\n\",\"keccak256\":\"0x0d1c2daaf19d9e4fb2afe29a5ccffd598caaa4baa33a99015031392bd92b88a0\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200276e3803806200276e8339810160408190526200003491620000fc565b6200003f33620000ac565b6001600160a01b0381166200009a5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640160405180910390fd5b6001600160a01b03166080526200012e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200010f57600080fd5b81516001600160a01b03811681146200012757600080fd5b9392505050565b60805161260f6200015f6000396000818161011c0152818161069201528181610d8601526116d7015261260f6000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c8063715018a611620000a35780639ce19365116200006e5780639ce193651462000296578063b8bb812614620002ad578063f2fde38b14620002c4578063fe5cd59a14620002db57600080fd5b8063715018a6146200024c5780638da5cb5b14620002565780638e952bfe1462000268578063937529ef146200027f57600080fd5b80633e3bc3d711620000e45780633e3bc3d714620001af578063422c29a414620001de5780635027dbe2146200020457806359770438146200021d57600080fd5b80632307f882146200011a5780632fea7b8114620001595780633a50045114620001705780633d56ff661462000198575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6200013c6200016a36600462001bf3565b620002f2565b620001876200018136600462001c18565b62000358565b604051901515815260200162000150565b6200013c620001a936600462001d50565b6200038a565b62000187620001c036600462001bf3565b6001600160a01b031660009081526001602052604090205460ff1690565b620001f5620001ef36600462001bf3565b6200076d565b60405162000150919062001db6565b6200021b6200021536600462001bf3565b620007e5565b005b6200013c6200022e36600462001bf3565b6001600160a01b039081166000908152600660205260409020541690565b6200021b62000b2e565b6000546001600160a01b03166200013c565b6200013c6200027936600462001e05565b62000b46565b6200021b6200029036600462001bf3565b62000e71565b6200021b620002a736600462001bf3565b62000f86565b6200021b620002be36600462001bf3565b620010a2565b6200021b620002d536600462001bf3565b62001388565b6200013c620002ec36600462001e59565b6200141e565b6001600160a01b03818116600090815260056020526040812054909116156200033457506001600160a01b039081166000908152600560205260409020541690565b506001600160a01b039081166000908152600360205260409020541690565b919050565b6000600283836040516200036e92919062001f46565b9081526040519081900360200190205460ff1690505b92915050565b3360009081526001602052604081205460ff1680620003b357506000546001600160a01b031633145b620004055760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920466163746f7279206f72206f776e65722063616e2063616c6c000060448201526064015b60405180910390fd5b6001600160a01b0384166200045d5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b038316620004b55760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b604051602001620004d190602080825260009082015260400190565b6040516020818303038152906040528051906020012082604051602001620004fa919062001f7c565b60405160208183030381529060405280519060200120036200055f5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b60008260405160200162000574919062001fb1565b604051602081830303815290604052905060028160405162000597919062001ff8565b9081526040519081900360200190205460ff1615620005f95760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b038581166000908152600560205260409020541615620006895760405162461bcd60e51b815260206004820152602360248201527f746f6b656e20616c7265616479206c696e6b656420746f20616e206964656e7460448201527f69747900000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000620006b8827f000000000000000000000000000000000000000000000000000000000000000087620019fc565b90506001600283604051620006ce919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03898116600081815260058552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600690955292832080549094168117909355927fa8261d398ddc63db24cc53cd0c63c9464cabad1bc478ede2107b32c1c4010b7a9190a395945050505050565b6001600160a01b038116600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015620007d957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620007ba575b50505050509050919050565b6001600160a01b0381166200083d5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b336001600160a01b03821603620008bd5760405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742062652063616c6c6564206f6e2073656e64657220616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b03808216600090815260036020526040808220543383529120548216911614620009315760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061206c696e6b65642077616c6c65742063616e20756e6c696e6b006044820152606401620003fc565b6001600160a01b038082166000908152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff198116909155909316808352600490915291812054905b8181101562000ae8576001600160a01b03838116600090815260046020526040902080549186169183908110620009b657620009b662002016565b6000918252602090912001546001600160a01b03160362000ad3576001600160a01b0383166000908152600460205260409020620009f660018462002042565b8154811062000a095762000a0962002016565b60009182526020808320909101546001600160a01b0386811684526004909252604090922080549190921691908390811062000a495762000a4962002016565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055918516815260049091526040902080548062000a9e5762000a9e62002058565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff1916905501905562000ae8565b8062000adf816200206e565b9150506200097b565b50816001600160a01b0316836001600160a01b03167f35e6fc363a4bf723d53b26c1a751674aca9c3ead425f0591f84f5540ede86f1260405160405180910390a3505050565b62000b3862001a8c565b62000b44600062001ae8565b565b600062000b5262001a8c565b6001600160a01b03831662000baa5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b60405160200162000bc690602080825260009082015260400190565b604051602081830303815290604052805190602001208260405160200162000bef919062001f7c565b604051602081830303815290604052805190602001200362000c545760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b60008260405160200162000c6991906200208b565b604051602081830303815290604052905060028160405162000c8c919062001ff8565b9081526040519081900360200190205460ff161562000cee5760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b03848116600090815260036020526040902054161562000d7d5760405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b600062000dac827f000000000000000000000000000000000000000000000000000000000000000087620019fc565b9050600160028360405162000dc2919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03888116600081815260038552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600486529381208054600181018255908252948120909401805490931681179092559290917f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c691a3949350505050565b62000e7b62001a8c565b6001600160a01b03811662000ed35760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b03811660009081526001602052604090205460ff1662000f3d5760405162461bcd60e51b815260206004820152600d60248201527f6e6f74206120666163746f7279000000000000000000000000000000000000006044820152606401620003fc565b6001600160a01b038116600081815260016020526040808220805460ff19169055517fd1fd5274f793d20291c0abfe42e1ef63213a11b34996d485f7afb8fe014248519190a250565b62000f9062001a8c565b6001600160a01b03811662000fe85760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b03811660009081526001602052604090205460ff1615620010535760405162461bcd60e51b815260206004820152601160248201527f616c7265616479206120666163746f72790000000000000000000000000000006044820152606401620003fc565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f45eb8ac5344d2d3f306550fe6e969ca4190526313c512afed851d052bf2ab2fd9190a250565b6001600160a01b038116620010fa5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b336000908152600360205260409020546001600160a01b0316620011875760405162461bcd60e51b815260206004820152602960248201527f77616c6c6574206e6f74206c696e6b656420746f20616e206964656e7469747960448201527f20636f6e747261637400000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b038181166000908152600360205260409020541615620011f15760405162461bcd60e51b815260206004820152601960248201527f6e65772077616c6c657420616c7265616479206c696e6b6564000000000000006044820152606401620003fc565b6001600160a01b0381811660009081526005602052604090205416156200125b5760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d20746f6b656e20616464726573736044820152606401620003fc565b336000908152600360209081526040808320546001600160a01b0316808452600490925290912054606511620012fa5760405162461bcd60e51b815260206004820152602560248201527f6d617820616d6f756e74206f662077616c6c657473207065722049442065786360448201527f65656465640000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b038083166000818152600360209081526040808320805495871673ffffffffffffffffffffffffffffffffffffffff1996871681179091558084526004835281842080546001810182559085529284209092018054909516841790945592517f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c69190a35050565b6200139262001a8c565b6001600160a01b038116620014105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401620003fc565b6200141b8162001ae8565b50565b60006200142a62001a8c565b6001600160a01b038416620014825760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6040516020016200149e90602080825260009082015260400190565b6040516020818303038152906040528051906020012083604051602001620014c7919062001f7c565b60405160208183030381529060405280519060200120036200152c5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b6000836040516020016200154191906200208b565b604051602081830303815290604052905060028160405162001564919062001ff8565b9081526040519081900360200190205460ff1615620015c65760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b038581166000908152600360205260409020541615620016555760405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000835111620016ce5760405162461bcd60e51b815260206004820152602560248201527f696e76616c696420617267756d656e74202d20656d707479206c697374206f6660448201527f206b6579730000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000620016fd827f000000000000000000000000000000000000000000000000000000000000000030620019fc565b905060005b84518110156200188357604080516001600160a01b038916602082015201604051602081830303815290604052805190602001208582815181106200174b576200174b62002016565b602002602001015103620017c85760405162461bcd60e51b815260206004820152603b60248201527f696e76616c696420617267756d656e74202d2077616c6c657420697320616c7360448201527f6f206c697374656420696e206d616e6167656d656e74206b65797300000000006064820152608401620003fc565b816001600160a01b0316631d381240868381518110620017ec57620017ec62002016565b60200260200101516001806040518463ffffffff1660e01b815260040162001827939291909283526020830191909152604082015260600190565b6020604051808303816000875af115801562001847573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200186d9190620020d2565b50806200187a816200206e565b91505062001702565b50604080513060208201526001600160a01b038316916353d413c5910160408051601f198184030181529082905280516020909101207fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1682526004820152600160248201526044016020604051808303816000875af115801562001911573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019379190620020d2565b5060016002836040516200194c919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03898116600081815260038552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600486529381208054600181018255908252948120909401805490931681179092559290917f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c691a395945050505050565b6000806040518060200162001a119062001bcd565b601f1982820381018352601f9091011660408181526001600160a01b0387811660208401528616818301528051808303820181526060830190915291925060009062001a649084908490608001620020f6565b604051602081830303815290604052905062001a81878262001b45565b979650505050505050565b6000546001600160a01b0316331462000b445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003fc565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808360405160200162001b5b919062001ff8565b60405160208183030381529060405280519060200120905060008360200184518381836000f592505050803b62001b9157600080fd5b6040516001600160a01b038216907ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e90600090a2949350505050565b6104b0806200212a83390190565b80356001600160a01b03811681146200035357600080fd5b60006020828403121562001c0657600080fd5b62001c118262001bdb565b9392505050565b6000806020838503121562001c2c57600080fd5b823567ffffffffffffffff8082111562001c4557600080fd5b818501915085601f83011262001c5a57600080fd5b81358181111562001c6a57600080fd5b86602082850101111562001c7d57600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562001cd15762001cd162001c8f565b604052919050565b600082601f83011262001ceb57600080fd5b813567ffffffffffffffff81111562001d085762001d0862001c8f565b62001d1d6020601f19601f8401160162001ca5565b81815284602083860101111562001d3357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121562001d6657600080fd5b62001d718462001bdb565b925062001d816020850162001bdb565b9150604084013567ffffffffffffffff81111562001d9e57600080fd5b62001dac8682870162001cd9565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562001df95783516001600160a01b03168352928401929184019160010162001dd2565b50909695505050505050565b6000806040838503121562001e1957600080fd5b62001e248362001bdb565b9150602083013567ffffffffffffffff81111562001e4157600080fd5b62001e4f8582860162001cd9565b9150509250929050565b60008060006060848603121562001e6f57600080fd5b62001e7a8462001bdb565b925060208085013567ffffffffffffffff8082111562001e9957600080fd5b62001ea78883890162001cd9565b9450604087013591508082111562001ebe57600080fd5b818701915087601f83011262001ed357600080fd5b81358181111562001ee85762001ee862001c8f565b8060051b915062001efb84830162001ca5565b818152918301840191848101908a84111562001f1657600080fd5b938501935b8385101562001f365784358252938501939085019062001f1b565b8096505050505050509250925092565b8183823760009101908152919050565b60005b8381101562001f7357818101518382015260200162001f59565b50506000910152565b602081526000825180602084015262001f9d81604085016020870162001f56565b601f01601f19169190910160400192915050565b7f546f6b656e00000000000000000000000000000000000000000000000000000081526000825162001feb81600585016020870162001f56565b9190910160050192915050565b600082516200200c81846020870162001f56565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156200038457620003846200202c565b634e487b7160e01b600052603160045260246000fd5b600060001982036200208457620020846200202c565b5060010190565b7f4f49440000000000000000000000000000000000000000000000000000000000815260008251620020c581600385016020870162001f56565b9190910160030192915050565b600060208284031215620020e557600080fd5b8151801515811462001c1157600080fd5b600083516200210a81846020880162001f56565b8351908301906200212081836020880162001f56565b0194935050505056fe608060405234801561001057600080fd5b506040516104b03803806104b083398101604081905261002f91610271565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6001600160a01b0381166100e05760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401610081565b817f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc556000826001600160a01b031663aaf10f426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016791906102a4565b6040516001600160a01b03848116602483015291925060009183169060440160408051601f198184030181529181526020820180516001600160e01b031663189acdbd60e31b179052516101bb91906102c6565b600060405180830381855af49150503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b505090508061024c5760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152606401610081565b505050506102f5565b80516001600160a01b038116811461026c57600080fd5b919050565b6000806040838503121561028457600080fd5b61028d83610255565b915061029b60208401610255565b90509250929050565b6000602082840312156102b657600080fd5b6102bf82610255565b9392505050565b6000825160005b818110156102e757602081860181015185830152016102cd565b506000920191825250919050565b6101ac806103046000396000f3fe60806040526004361061001e5760003560e01c80632307f882146100e1575b60006100487f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc5490565b73ffffffffffffffffffffffffffffffffffffffff1663aaf10f426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b69190610139565b90503660008037600080366000846127105a03f43d806000803e8180156100dc57816000f35b816000fd5b3480156100ed57600080fd5b507f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc5460405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60006020828403121561014b57600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461016f57600080fd5b939250505056fea264697066735822122084772c21e660be530d4f58ec8c645ae386b1eb8999d049aad644dea992ab041c64736f6c63430008110033a26469706673582212203c17a6922283475fa59652dd274ad3b4b9e3c3203c4b64a25bb746649add6d0964736f6c63430008110033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001155760003560e01c8063715018a611620000a35780639ce19365116200006e5780639ce193651462000296578063b8bb812614620002ad578063f2fde38b14620002c4578063fe5cd59a14620002db57600080fd5b8063715018a6146200024c5780638da5cb5b14620002565780638e952bfe1462000268578063937529ef146200027f57600080fd5b80633e3bc3d711620000e45780633e3bc3d714620001af578063422c29a414620001de5780635027dbe2146200020457806359770438146200021d57600080fd5b80632307f882146200011a5780632fea7b8114620001595780633a50045114620001705780633d56ff661462000198575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6200013c6200016a36600462001bf3565b620002f2565b620001876200018136600462001c18565b62000358565b604051901515815260200162000150565b6200013c620001a936600462001d50565b6200038a565b62000187620001c036600462001bf3565b6001600160a01b031660009081526001602052604090205460ff1690565b620001f5620001ef36600462001bf3565b6200076d565b60405162000150919062001db6565b6200021b6200021536600462001bf3565b620007e5565b005b6200013c6200022e36600462001bf3565b6001600160a01b039081166000908152600660205260409020541690565b6200021b62000b2e565b6000546001600160a01b03166200013c565b6200013c6200027936600462001e05565b62000b46565b6200021b6200029036600462001bf3565b62000e71565b6200021b620002a736600462001bf3565b62000f86565b6200021b620002be36600462001bf3565b620010a2565b6200021b620002d536600462001bf3565b62001388565b6200013c620002ec36600462001e59565b6200141e565b6001600160a01b03818116600090815260056020526040812054909116156200033457506001600160a01b039081166000908152600560205260409020541690565b506001600160a01b039081166000908152600360205260409020541690565b919050565b6000600283836040516200036e92919062001f46565b9081526040519081900360200190205460ff1690505b92915050565b3360009081526001602052604081205460ff1680620003b357506000546001600160a01b031633145b620004055760405162461bcd60e51b815260206004820152601e60248201527f6f6e6c7920466163746f7279206f72206f776e65722063616e2063616c6c000060448201526064015b60405180910390fd5b6001600160a01b0384166200045d5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b038316620004b55760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b604051602001620004d190602080825260009082015260400190565b6040516020818303038152906040528051906020012082604051602001620004fa919062001f7c565b60405160208183030381529060405280519060200120036200055f5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b60008260405160200162000574919062001fb1565b604051602081830303815290604052905060028160405162000597919062001ff8565b9081526040519081900360200190205460ff1615620005f95760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b038581166000908152600560205260409020541615620006895760405162461bcd60e51b815260206004820152602360248201527f746f6b656e20616c7265616479206c696e6b656420746f20616e206964656e7460448201527f69747900000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000620006b8827f000000000000000000000000000000000000000000000000000000000000000087620019fc565b90506001600283604051620006ce919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03898116600081815260058552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600690955292832080549094168117909355927fa8261d398ddc63db24cc53cd0c63c9464cabad1bc478ede2107b32c1c4010b7a9190a395945050505050565b6001600160a01b038116600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015620007d957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620007ba575b50505050509050919050565b6001600160a01b0381166200083d5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b336001600160a01b03821603620008bd5760405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742062652063616c6c6564206f6e2073656e64657220616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b03808216600090815260036020526040808220543383529120548216911614620009315760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061206c696e6b65642077616c6c65742063616e20756e6c696e6b006044820152606401620003fc565b6001600160a01b038082166000908152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff198116909155909316808352600490915291812054905b8181101562000ae8576001600160a01b03838116600090815260046020526040902080549186169183908110620009b657620009b662002016565b6000918252602090912001546001600160a01b03160362000ad3576001600160a01b0383166000908152600460205260409020620009f660018462002042565b8154811062000a095762000a0962002016565b60009182526020808320909101546001600160a01b0386811684526004909252604090922080549190921691908390811062000a495762000a4962002016565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055918516815260049091526040902080548062000a9e5762000a9e62002058565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff1916905501905562000ae8565b8062000adf816200206e565b9150506200097b565b50816001600160a01b0316836001600160a01b03167f35e6fc363a4bf723d53b26c1a751674aca9c3ead425f0591f84f5540ede86f1260405160405180910390a3505050565b62000b3862001a8c565b62000b44600062001ae8565b565b600062000b5262001a8c565b6001600160a01b03831662000baa5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b60405160200162000bc690602080825260009082015260400190565b604051602081830303815290604052805190602001208260405160200162000bef919062001f7c565b604051602081830303815290604052805190602001200362000c545760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b60008260405160200162000c6991906200208b565b604051602081830303815290604052905060028160405162000c8c919062001ff8565b9081526040519081900360200190205460ff161562000cee5760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b03848116600090815260036020526040902054161562000d7d5760405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b600062000dac827f000000000000000000000000000000000000000000000000000000000000000087620019fc565b9050600160028360405162000dc2919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03888116600081815260038552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600486529381208054600181018255908252948120909401805490931681179092559290917f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c691a3949350505050565b62000e7b62001a8c565b6001600160a01b03811662000ed35760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b03811660009081526001602052604090205460ff1662000f3d5760405162461bcd60e51b815260206004820152600d60248201527f6e6f74206120666163746f7279000000000000000000000000000000000000006044820152606401620003fc565b6001600160a01b038116600081815260016020526040808220805460ff19169055517fd1fd5274f793d20291c0abfe42e1ef63213a11b34996d485f7afb8fe014248519190a250565b62000f9062001a8c565b6001600160a01b03811662000fe85760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6001600160a01b03811660009081526001602052604090205460ff1615620010535760405162461bcd60e51b815260206004820152601160248201527f616c7265616479206120666163746f72790000000000000000000000000000006044820152606401620003fc565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f45eb8ac5344d2d3f306550fe6e969ca4190526313c512afed851d052bf2ab2fd9190a250565b6001600160a01b038116620010fa5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b336000908152600360205260409020546001600160a01b0316620011875760405162461bcd60e51b815260206004820152602960248201527f77616c6c6574206e6f74206c696e6b656420746f20616e206964656e7469747960448201527f20636f6e747261637400000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b038181166000908152600360205260409020541615620011f15760405162461bcd60e51b815260206004820152601960248201527f6e65772077616c6c657420616c7265616479206c696e6b6564000000000000006044820152606401620003fc565b6001600160a01b0381811660009081526005602052604090205416156200125b5760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d20746f6b656e20616464726573736044820152606401620003fc565b336000908152600360209081526040808320546001600160a01b0316808452600490925290912054606511620012fa5760405162461bcd60e51b815260206004820152602560248201527f6d617820616d6f756e74206f662077616c6c657473207065722049442065786360448201527f65656465640000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6001600160a01b038083166000818152600360209081526040808320805495871673ffffffffffffffffffffffffffffffffffffffff1996871681179091558084526004835281842080546001810182559085529284209092018054909516841790945592517f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c69190a35050565b6200139262001a8c565b6001600160a01b038116620014105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401620003fc565b6200141b8162001ae8565b50565b60006200142a62001a8c565b6001600160a01b038416620014825760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401620003fc565b6040516020016200149e90602080825260009082015260400190565b6040516020818303038152906040528051906020012083604051602001620014c7919062001f7c565b60405160208183030381529060405280519060200120036200152c5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620003fc565b6000836040516020016200154191906200208b565b604051602081830303815290604052905060028160405162001564919062001ff8565b9081526040519081900360200190205460ff1615620015c65760405162461bcd60e51b815260206004820152601260248201527f73616c7420616c72656164792074616b656e00000000000000000000000000006044820152606401620003fc565b6001600160a01b038581166000908152600360205260409020541615620016555760405162461bcd60e51b8152602060048201526024808201527f77616c6c657420616c7265616479206c696e6b656420746f20616e206964656e60448201527f74697479000000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000835111620016ce5760405162461bcd60e51b815260206004820152602560248201527f696e76616c696420617267756d656e74202d20656d707479206c697374206f6660448201527f206b6579730000000000000000000000000000000000000000000000000000006064820152608401620003fc565b6000620016fd827f000000000000000000000000000000000000000000000000000000000000000030620019fc565b905060005b84518110156200188357604080516001600160a01b038916602082015201604051602081830303815290604052805190602001208582815181106200174b576200174b62002016565b602002602001015103620017c85760405162461bcd60e51b815260206004820152603b60248201527f696e76616c696420617267756d656e74202d2077616c6c657420697320616c7360448201527f6f206c697374656420696e206d616e6167656d656e74206b65797300000000006064820152608401620003fc565b816001600160a01b0316631d381240868381518110620017ec57620017ec62002016565b60200260200101516001806040518463ffffffff1660e01b815260040162001827939291909283526020830191909152604082015260600190565b6020604051808303816000875af115801562001847573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200186d9190620020d2565b50806200187a816200206e565b91505062001702565b50604080513060208201526001600160a01b038316916353d413c5910160408051601f198184030181529082905280516020909101207fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1682526004820152600160248201526044016020604051808303816000875af115801562001911573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019379190620020d2565b5060016002836040516200194c919062001ff8565b9081526040805160209281900383018120805460ff1916941515949094179093556001600160a01b03898116600081815260038552838120805473ffffffffffffffffffffffffffffffffffffffff19908116948916948517909155838252600486529381208054600181018255908252948120909401805490931681179092559290917f8e0c709111388f5480579514d86663489ab1f206fe6da1a0c4d03ac8c318b3c691a395945050505050565b6000806040518060200162001a119062001bcd565b601f1982820381018352601f9091011660408181526001600160a01b0387811660208401528616818301528051808303820181526060830190915291925060009062001a649084908490608001620020f6565b604051602081830303815290604052905062001a81878262001b45565b979650505050505050565b6000546001600160a01b0316331462000b445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003fc565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000808360405160200162001b5b919062001ff8565b60405160208183030381529060405280519060200120905060008360200184518381836000f592505050803b62001b9157600080fd5b6040516001600160a01b038216907ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e90600090a2949350505050565b6104b0806200212a83390190565b80356001600160a01b03811681146200035357600080fd5b60006020828403121562001c0657600080fd5b62001c118262001bdb565b9392505050565b6000806020838503121562001c2c57600080fd5b823567ffffffffffffffff8082111562001c4557600080fd5b818501915085601f83011262001c5a57600080fd5b81358181111562001c6a57600080fd5b86602082850101111562001c7d57600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562001cd15762001cd162001c8f565b604052919050565b600082601f83011262001ceb57600080fd5b813567ffffffffffffffff81111562001d085762001d0862001c8f565b62001d1d6020601f19601f8401160162001ca5565b81815284602083860101111562001d3357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121562001d6657600080fd5b62001d718462001bdb565b925062001d816020850162001bdb565b9150604084013567ffffffffffffffff81111562001d9e57600080fd5b62001dac8682870162001cd9565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562001df95783516001600160a01b03168352928401929184019160010162001dd2565b50909695505050505050565b6000806040838503121562001e1957600080fd5b62001e248362001bdb565b9150602083013567ffffffffffffffff81111562001e4157600080fd5b62001e4f8582860162001cd9565b9150509250929050565b60008060006060848603121562001e6f57600080fd5b62001e7a8462001bdb565b925060208085013567ffffffffffffffff8082111562001e9957600080fd5b62001ea78883890162001cd9565b9450604087013591508082111562001ebe57600080fd5b818701915087601f83011262001ed357600080fd5b81358181111562001ee85762001ee862001c8f565b8060051b915062001efb84830162001ca5565b818152918301840191848101908a84111562001f1657600080fd5b938501935b8385101562001f365784358252938501939085019062001f1b565b8096505050505050509250925092565b8183823760009101908152919050565b60005b8381101562001f7357818101518382015260200162001f59565b50506000910152565b602081526000825180602084015262001f9d81604085016020870162001f56565b601f01601f19169190910160400192915050565b7f546f6b656e00000000000000000000000000000000000000000000000000000081526000825162001feb81600585016020870162001f56565b9190910160050192915050565b600082516200200c81846020870162001f56565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156200038457620003846200202c565b634e487b7160e01b600052603160045260246000fd5b600060001982036200208457620020846200202c565b5060010190565b7f4f49440000000000000000000000000000000000000000000000000000000000815260008251620020c581600385016020870162001f56565b9190910160030192915050565b600060208284031215620020e557600080fd5b8151801515811462001c1157600080fd5b600083516200210a81846020880162001f56565b8351908301906200212081836020880162001f56565b0194935050505056fe608060405234801561001057600080fd5b506040516104b03803806104b083398101604081905261002f91610271565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b6001600160a01b0381166100e05760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401610081565b817f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc556000826001600160a01b031663aaf10f426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016791906102a4565b6040516001600160a01b03848116602483015291925060009183169060440160408051601f198184030181529181526020820180516001600160e01b031663189acdbd60e31b179052516101bb91906102c6565b600060405180830381855af49150503d80600081146101f6576040519150601f19603f3d011682016040523d82523d6000602084013e6101fb565b606091505b505090508061024c5760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152606401610081565b505050506102f5565b80516001600160a01b038116811461026c57600080fd5b919050565b6000806040838503121561028457600080fd5b61028d83610255565b915061029b60208401610255565b90509250929050565b6000602082840312156102b657600080fd5b6102bf82610255565b9392505050565b6000825160005b818110156102e757602081860181015185830152016102cd565b506000920191825250919050565b6101ac806103046000396000f3fe60806040526004361061001e5760003560e01c80632307f882146100e1575b60006100487f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc5490565b73ffffffffffffffffffffffffffffffffffffffff1663aaf10f426040518163ffffffff1660e01b8152600401602060405180830381865afa158015610092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b69190610139565b90503660008037600080366000846127105a03f43d806000803e8180156100dc57816000f35b816000fd5b3480156100ed57600080fd5b507f821f3e4d3d679f19eacc940c87acf846ea6eae24a63058ea750304437a62aafc5460405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60006020828403121561014b57600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461016f57600080fd5b939250505056fea264697066735822122084772c21e660be530d4f58ec8c645ae386b1eb8999d049aad644dea992ab041c64736f6c63430008110033a26469706673582212203c17a6922283475fa59652dd274ad3b4b9e3c3203c4b64a25bb746649add6d0964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addTokenFactory(address)": {
        "details": "See {IdFactory-addTokenFactory}."
      },
      "createIdentity(address,string)": {
        "details": "See {IdFactory-createIdentity}."
      },
      "createIdentityWithManagementKeys(address,string,bytes32[])": {
        "details": "See {IdFactory-createIdentityWithManagementKeys}."
      },
      "createTokenIdentity(address,address,string)": {
        "details": "See {IdFactory-createTokenIdentity}."
      },
      "getIdentity(address)": {
        "details": "See {IdFactory-getIdentity}."
      },
      "getToken(address)": {
        "details": "See {IdFactory-getToken}."
      },
      "getWallets(address)": {
        "details": "See {IdFactory-getWallets}."
      },
      "implementationAuthority()": {
        "details": "See {IdFactory-implementationAuthority}."
      },
      "isSaltTaken(string)": {
        "details": "See {IdFactory-isSaltTaken}."
      },
      "isTokenFactory(address)": {
        "details": "See {IdFactory-isTokenFactory}."
      },
      "linkWallet(address)": {
        "details": "See {IdFactory-linkWallet}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeTokenFactory(address)": {
        "details": "See {IdFactory-removeTokenFactory}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlinkWallet(address)": {
        "details": "See {IdFactory-unlinkWallet}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deployed(address)": {
        "notice": "events"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1821,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenFactories",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1827,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_saltTaken",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 1831,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_userIdentity",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1836,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_wallets",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 1840,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenIdentity",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1844,
        "contract": "src/factory/IdFactory.sol:IdFactory",
        "label": "_tokenAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}