{
  "address": "0x3C37e05b696345010afA7b1624912289769aDcd5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedImplementation",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newImplementation",
          "type": "address"
        }
      ],
      "name": "updateImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6e0099a4f71535b86ad9568cb72504f402498d67c1fdc6ae3295bf3855b5c798",
  "receipt": {
    "to": null,
    "from": "0x6D571882684d4d34733F204a4612613D666250EC",
    "contractAddress": "0x3C37e05b696345010afA7b1624912289769aDcd5",
    "transactionIndex": 5,
    "gasUsed": "277837",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000100000400000000000000000100000100000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000020000000000000000000000000000000000",
    "blockHash": "0xbd703f8240533d7597fbcc671a19d3d5d9d8a7d0af3f282cbbb9f3f709f38681",
    "transactionHash": "0x6e0099a4f71535b86ad9568cb72504f402498d67c1fdc6ae3295bf3855b5c798",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 18065864,
        "transactionHash": "0x6e0099a4f71535b86ad9568cb72504f402498d67c1fdc6ae3295bf3855b5c798",
        "address": "0x3C37e05b696345010afA7b1624912289769aDcd5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006d571882684d4d34733f204a4612613d666250ec"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0xbd703f8240533d7597fbcc671a19d3d5d9d8a7d0af3f282cbbb9f3f709f38681"
      }
    ],
    "blockNumber": 18065864,
    "cumulativeGasUsed": "1433257",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d1248d5ab23d5d574e85041617879ba7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"UpdatedImplementation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getImplementation()\":{\"details\":\"See {IImplementationAuthority-getImplementation}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateImplementation(address)\":{\"details\":\"See {IImplementationAuthority-updateImplementation}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxy/ImplementationAuthority.sol\":\"ImplementationAuthority\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/interface/IImplementationAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\ninterface IImplementationAuthority {\\n\\t// event emitted when the implementation contract is updated\\n\\tevent UpdatedImplementation(address newAddress);\\n\\n\\t/**\\n\\t * @dev updates the address used as implementation by the proxies linked\\n\\t * to this ImplementationAuthority contract\\n\\t * @param _newImplementation the address of the new implementation contract\\n\\t * only Owner can call\\n\\t */\\n\\tfunction updateImplementation(address _newImplementation) external;\\n\\n\\t/**\\n\\t * @dev returns the address of the implementation\\n\\t */\\n\\tfunction getImplementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x949a5f9238b5e95797eeef34e34c05ad9546d41b17be5be54acb5859a3c99918\",\"license\":\"GPL-3.0\"},\"src/proxy/ImplementationAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\n\\nimport '../interface/IImplementationAuthority.sol';\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\ncontract ImplementationAuthority is IImplementationAuthority, Ownable {\\n  // the address of implementation of ONCHAINID\\n  address internal _implementation;\\n\\n  constructor() {}\\n\\n  /**\\n   *  @dev See {IImplementationAuthority-updateImplementation}.\\n   */\\n  function updateImplementation(address _newImplementation) external override onlyOwner {\\n    require(_newImplementation != address(0), 'invalid argument - zero address');\\n    _implementation = _newImplementation;\\n    emit UpdatedImplementation(_newImplementation);\\n  }\\n\\n  /**\\n   *  @dev See {IImplementationAuthority-getImplementation}.\\n   */\\n  function getImplementation() external view override returns (address) {\\n    return _implementation;\\n  }\\n}\\n\",\"keccak256\":\"0x906488a1ee54af96cd4d8397f67e10f63a4d6142c6a5a2dbc189f07cdaf78185\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361039d90816100618239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063025b22bc1461022d578063715018a6146101b75780638da5cb5b14610185578063aaf10f42146101515763f2fde38b1461005657600080fd5b3461014d57602060031936011261014d576004359073ffffffffffffffffffffffffffffffffffffffff9081831680930361014957610093610302565b82156100e0575082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6084905162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8380fd5b5080fd5b503461014d578160031936011261014d5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b503461014d578160031936011261014d5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b823461022a578060031936011261022a576101d0610302565b8073ffffffffffffffffffffffffffffffffffffffff815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461014d57602060031936011261014d576004359073ffffffffffffffffffffffffffffffffffffffff82168092036102fe57610269610302565b81156102bb57816020917f87c4e67a766ffddda27f441d63853a36ae64fbb07775a7c59d395e064b204eeb9373ffffffffffffffffffffffffffffffffffffffff19600154161760015551908152a180f35b6064905162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361032357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220ecf59e08486a3b2fb7f92c726b55bdb24b04b7c6799d696606037de13508d4f164736f6c63430008110033",
  "deployedBytecode": "0x604060808152600436101561001357600080fd5b600090813560e01c8063025b22bc1461022d578063715018a6146101b75780638da5cb5b14610185578063aaf10f42146101515763f2fde38b1461005657600080fd5b3461014d57602060031936011261014d576004359073ffffffffffffffffffffffffffffffffffffffff9081831680930361014957610093610302565b82156100e0575082548273ffffffffffffffffffffffffffffffffffffffff198216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b6084905162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8380fd5b5080fd5b503461014d578160031936011261014d5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b503461014d578160031936011261014d5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b823461022a578060031936011261022a576101d0610302565b8073ffffffffffffffffffffffffffffffffffffffff815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461014d57602060031936011261014d576004359073ffffffffffffffffffffffffffffffffffffffff82168092036102fe57610269610302565b81156102bb57816020917f87c4e67a766ffddda27f441d63853a36ae64fbb07775a7c59d395e064b204eeb9373ffffffffffffffffffffffffffffffffffffffff19600154161760015551908152a180f35b6064905162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361032357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220ecf59e08486a3b2fb7f92c726b55bdb24b04b7c6799d696606037de13508d4f164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getImplementation()": {
        "details": "See {IImplementationAuthority-getImplementation}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateImplementation(address)": {
        "details": "See {IImplementationAuthority-updateImplementation}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 259,
        "contract": "src/proxy/ImplementationAuthority.sol:ImplementationAuthority",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 16058,
        "contract": "src/proxy/ImplementationAuthority.sol:ImplementationAuthority",
        "label": "_implementation",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}